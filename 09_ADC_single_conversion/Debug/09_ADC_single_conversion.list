
09_ADC_single_conversion.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001bc4  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000004c  08001d94  08001d94  00002d94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001de0  08001de0  0000305c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08001de0  08001de0  00002de0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001de8  08001de8  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001de8  08001de8  00002de8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001dec  08001dec  00002dec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001df0  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000174  2000005c  08001e4c  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001d0  08001e4c  000031d0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000011c9  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000005e9  00000000  00000000  00004255  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000190  00000000  00000000  00004840  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000111  00000000  00000000  000049d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001a97d  00000000  00000000  00004ae1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000230f  00000000  00000000  0001f45e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00090810  00000000  00000000  0002176d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b1f7d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000d74  00000000  00000000  000b1fc0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000072  00000000  00000000  000b2d34  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	2000005c 	.word	0x2000005c
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001d7c 	.word	0x08001d7c

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000060 	.word	0x20000060
 800020c:	08001d7c 	.word	0x08001d7c

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_drsub>:
 80002b0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002b4:	e002      	b.n	80002bc <__adddf3>
 80002b6:	bf00      	nop

080002b8 <__aeabi_dsub>:
 80002b8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002bc <__adddf3>:
 80002bc:	b530      	push	{r4, r5, lr}
 80002be:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002c2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002c6:	ea94 0f05 	teq	r4, r5
 80002ca:	bf08      	it	eq
 80002cc:	ea90 0f02 	teqeq	r0, r2
 80002d0:	bf1f      	itttt	ne
 80002d2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002d6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002da:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002de:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002e2:	f000 80e2 	beq.w	80004aa <__adddf3+0x1ee>
 80002e6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ea:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ee:	bfb8      	it	lt
 80002f0:	426d      	neglt	r5, r5
 80002f2:	dd0c      	ble.n	800030e <__adddf3+0x52>
 80002f4:	442c      	add	r4, r5
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	ea82 0000 	eor.w	r0, r2, r0
 8000302:	ea83 0101 	eor.w	r1, r3, r1
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	2d36      	cmp	r5, #54	@ 0x36
 8000310:	bf88      	it	hi
 8000312:	bd30      	pophi	{r4, r5, pc}
 8000314:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000318:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800031c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000320:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000324:	d002      	beq.n	800032c <__adddf3+0x70>
 8000326:	4240      	negs	r0, r0
 8000328:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800032c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000330:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000334:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000338:	d002      	beq.n	8000340 <__adddf3+0x84>
 800033a:	4252      	negs	r2, r2
 800033c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000340:	ea94 0f05 	teq	r4, r5
 8000344:	f000 80a7 	beq.w	8000496 <__adddf3+0x1da>
 8000348:	f1a4 0401 	sub.w	r4, r4, #1
 800034c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000350:	db0d      	blt.n	800036e <__adddf3+0xb2>
 8000352:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000356:	fa22 f205 	lsr.w	r2, r2, r5
 800035a:	1880      	adds	r0, r0, r2
 800035c:	f141 0100 	adc.w	r1, r1, #0
 8000360:	fa03 f20e 	lsl.w	r2, r3, lr
 8000364:	1880      	adds	r0, r0, r2
 8000366:	fa43 f305 	asr.w	r3, r3, r5
 800036a:	4159      	adcs	r1, r3
 800036c:	e00e      	b.n	800038c <__adddf3+0xd0>
 800036e:	f1a5 0520 	sub.w	r5, r5, #32
 8000372:	f10e 0e20 	add.w	lr, lr, #32
 8000376:	2a01      	cmp	r2, #1
 8000378:	fa03 fc0e 	lsl.w	ip, r3, lr
 800037c:	bf28      	it	cs
 800037e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000382:	fa43 f305 	asr.w	r3, r3, r5
 8000386:	18c0      	adds	r0, r0, r3
 8000388:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800038c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000390:	d507      	bpl.n	80003a2 <__adddf3+0xe6>
 8000392:	f04f 0e00 	mov.w	lr, #0
 8000396:	f1dc 0c00 	rsbs	ip, ip, #0
 800039a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800039e:	eb6e 0101 	sbc.w	r1, lr, r1
 80003a2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003a6:	d31b      	bcc.n	80003e0 <__adddf3+0x124>
 80003a8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003ac:	d30c      	bcc.n	80003c8 <__adddf3+0x10c>
 80003ae:	0849      	lsrs	r1, r1, #1
 80003b0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003b4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003b8:	f104 0401 	add.w	r4, r4, #1
 80003bc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003c0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003c4:	f080 809a 	bcs.w	80004fc <__adddf3+0x240>
 80003c8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003cc:	bf08      	it	eq
 80003ce:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003d2:	f150 0000 	adcs.w	r0, r0, #0
 80003d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003da:	ea41 0105 	orr.w	r1, r1, r5
 80003de:	bd30      	pop	{r4, r5, pc}
 80003e0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003e4:	4140      	adcs	r0, r0
 80003e6:	eb41 0101 	adc.w	r1, r1, r1
 80003ea:	3c01      	subs	r4, #1
 80003ec:	bf28      	it	cs
 80003ee:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003f2:	d2e9      	bcs.n	80003c8 <__adddf3+0x10c>
 80003f4:	f091 0f00 	teq	r1, #0
 80003f8:	bf04      	itt	eq
 80003fa:	4601      	moveq	r1, r0
 80003fc:	2000      	moveq	r0, #0
 80003fe:	fab1 f381 	clz	r3, r1
 8000402:	bf08      	it	eq
 8000404:	3320      	addeq	r3, #32
 8000406:	f1a3 030b 	sub.w	r3, r3, #11
 800040a:	f1b3 0220 	subs.w	r2, r3, #32
 800040e:	da0c      	bge.n	800042a <__adddf3+0x16e>
 8000410:	320c      	adds	r2, #12
 8000412:	dd08      	ble.n	8000426 <__adddf3+0x16a>
 8000414:	f102 0c14 	add.w	ip, r2, #20
 8000418:	f1c2 020c 	rsb	r2, r2, #12
 800041c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000420:	fa21 f102 	lsr.w	r1, r1, r2
 8000424:	e00c      	b.n	8000440 <__adddf3+0x184>
 8000426:	f102 0214 	add.w	r2, r2, #20
 800042a:	bfd8      	it	le
 800042c:	f1c2 0c20 	rsble	ip, r2, #32
 8000430:	fa01 f102 	lsl.w	r1, r1, r2
 8000434:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000438:	bfdc      	itt	le
 800043a:	ea41 010c 	orrle.w	r1, r1, ip
 800043e:	4090      	lslle	r0, r2
 8000440:	1ae4      	subs	r4, r4, r3
 8000442:	bfa2      	ittt	ge
 8000444:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000448:	4329      	orrge	r1, r5
 800044a:	bd30      	popge	{r4, r5, pc}
 800044c:	ea6f 0404 	mvn.w	r4, r4
 8000450:	3c1f      	subs	r4, #31
 8000452:	da1c      	bge.n	800048e <__adddf3+0x1d2>
 8000454:	340c      	adds	r4, #12
 8000456:	dc0e      	bgt.n	8000476 <__adddf3+0x1ba>
 8000458:	f104 0414 	add.w	r4, r4, #20
 800045c:	f1c4 0220 	rsb	r2, r4, #32
 8000460:	fa20 f004 	lsr.w	r0, r0, r4
 8000464:	fa01 f302 	lsl.w	r3, r1, r2
 8000468:	ea40 0003 	orr.w	r0, r0, r3
 800046c:	fa21 f304 	lsr.w	r3, r1, r4
 8000470:	ea45 0103 	orr.w	r1, r5, r3
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f1c4 040c 	rsb	r4, r4, #12
 800047a:	f1c4 0220 	rsb	r2, r4, #32
 800047e:	fa20 f002 	lsr.w	r0, r0, r2
 8000482:	fa01 f304 	lsl.w	r3, r1, r4
 8000486:	ea40 0003 	orr.w	r0, r0, r3
 800048a:	4629      	mov	r1, r5
 800048c:	bd30      	pop	{r4, r5, pc}
 800048e:	fa21 f004 	lsr.w	r0, r1, r4
 8000492:	4629      	mov	r1, r5
 8000494:	bd30      	pop	{r4, r5, pc}
 8000496:	f094 0f00 	teq	r4, #0
 800049a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800049e:	bf06      	itte	eq
 80004a0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004a4:	3401      	addeq	r4, #1
 80004a6:	3d01      	subne	r5, #1
 80004a8:	e74e      	b.n	8000348 <__adddf3+0x8c>
 80004aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ae:	bf18      	it	ne
 80004b0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004b4:	d029      	beq.n	800050a <__adddf3+0x24e>
 80004b6:	ea94 0f05 	teq	r4, r5
 80004ba:	bf08      	it	eq
 80004bc:	ea90 0f02 	teqeq	r0, r2
 80004c0:	d005      	beq.n	80004ce <__adddf3+0x212>
 80004c2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004c6:	bf04      	itt	eq
 80004c8:	4619      	moveq	r1, r3
 80004ca:	4610      	moveq	r0, r2
 80004cc:	bd30      	pop	{r4, r5, pc}
 80004ce:	ea91 0f03 	teq	r1, r3
 80004d2:	bf1e      	ittt	ne
 80004d4:	2100      	movne	r1, #0
 80004d6:	2000      	movne	r0, #0
 80004d8:	bd30      	popne	{r4, r5, pc}
 80004da:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004de:	d105      	bne.n	80004ec <__adddf3+0x230>
 80004e0:	0040      	lsls	r0, r0, #1
 80004e2:	4149      	adcs	r1, r1
 80004e4:	bf28      	it	cs
 80004e6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ea:	bd30      	pop	{r4, r5, pc}
 80004ec:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004f0:	bf3c      	itt	cc
 80004f2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004f6:	bd30      	popcc	{r4, r5, pc}
 80004f8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004fc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000500:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000504:	f04f 0000 	mov.w	r0, #0
 8000508:	bd30      	pop	{r4, r5, pc}
 800050a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800050e:	bf1a      	itte	ne
 8000510:	4619      	movne	r1, r3
 8000512:	4610      	movne	r0, r2
 8000514:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000518:	bf1c      	itt	ne
 800051a:	460b      	movne	r3, r1
 800051c:	4602      	movne	r2, r0
 800051e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000522:	bf06      	itte	eq
 8000524:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000528:	ea91 0f03 	teqeq	r1, r3
 800052c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000530:	bd30      	pop	{r4, r5, pc}
 8000532:	bf00      	nop

08000534 <__aeabi_ui2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f04f 0500 	mov.w	r5, #0
 800054c:	f04f 0100 	mov.w	r1, #0
 8000550:	e750      	b.n	80003f4 <__adddf3+0x138>
 8000552:	bf00      	nop

08000554 <__aeabi_i2d>:
 8000554:	f090 0f00 	teq	r0, #0
 8000558:	bf04      	itt	eq
 800055a:	2100      	moveq	r1, #0
 800055c:	4770      	bxeq	lr
 800055e:	b530      	push	{r4, r5, lr}
 8000560:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000564:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000568:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800056c:	bf48      	it	mi
 800056e:	4240      	negmi	r0, r0
 8000570:	f04f 0100 	mov.w	r1, #0
 8000574:	e73e      	b.n	80003f4 <__adddf3+0x138>
 8000576:	bf00      	nop

08000578 <__aeabi_f2d>:
 8000578:	0042      	lsls	r2, r0, #1
 800057a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800057e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000582:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000586:	bf1f      	itttt	ne
 8000588:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800058c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000590:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000594:	4770      	bxne	lr
 8000596:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800059a:	bf08      	it	eq
 800059c:	4770      	bxeq	lr
 800059e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005a2:	bf04      	itt	eq
 80005a4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005a8:	4770      	bxeq	lr
 80005aa:	b530      	push	{r4, r5, lr}
 80005ac:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005b0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005b4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005b8:	e71c      	b.n	80003f4 <__adddf3+0x138>
 80005ba:	bf00      	nop

080005bc <__aeabi_ul2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f04f 0500 	mov.w	r5, #0
 80005ca:	e00a      	b.n	80005e2 <__aeabi_l2d+0x16>

080005cc <__aeabi_l2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005da:	d502      	bpl.n	80005e2 <__aeabi_l2d+0x16>
 80005dc:	4240      	negs	r0, r0
 80005de:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005e2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005e6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ea:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ee:	f43f aed8 	beq.w	80003a2 <__adddf3+0xe6>
 80005f2:	f04f 0203 	mov.w	r2, #3
 80005f6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005fa:	bf18      	it	ne
 80005fc:	3203      	addne	r2, #3
 80005fe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000602:	bf18      	it	ne
 8000604:	3203      	addne	r2, #3
 8000606:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800060a:	f1c2 0320 	rsb	r3, r2, #32
 800060e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000612:	fa20 f002 	lsr.w	r0, r0, r2
 8000616:	fa01 fe03 	lsl.w	lr, r1, r3
 800061a:	ea40 000e 	orr.w	r0, r0, lr
 800061e:	fa21 f102 	lsr.w	r1, r1, r2
 8000622:	4414      	add	r4, r2
 8000624:	e6bd      	b.n	80003a2 <__adddf3+0xe6>
 8000626:	bf00      	nop

08000628 <__aeabi_dmul>:
 8000628:	b570      	push	{r4, r5, r6, lr}
 800062a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800062e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000632:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000636:	bf1d      	ittte	ne
 8000638:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800063c:	ea94 0f0c 	teqne	r4, ip
 8000640:	ea95 0f0c 	teqne	r5, ip
 8000644:	f000 f8de 	bleq	8000804 <__aeabi_dmul+0x1dc>
 8000648:	442c      	add	r4, r5
 800064a:	ea81 0603 	eor.w	r6, r1, r3
 800064e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000652:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000656:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800065a:	bf18      	it	ne
 800065c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000660:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000664:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000668:	d038      	beq.n	80006dc <__aeabi_dmul+0xb4>
 800066a:	fba0 ce02 	umull	ip, lr, r0, r2
 800066e:	f04f 0500 	mov.w	r5, #0
 8000672:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000676:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800067a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800067e:	f04f 0600 	mov.w	r6, #0
 8000682:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000686:	f09c 0f00 	teq	ip, #0
 800068a:	bf18      	it	ne
 800068c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000690:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000694:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000698:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800069c:	d204      	bcs.n	80006a8 <__aeabi_dmul+0x80>
 800069e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006a2:	416d      	adcs	r5, r5
 80006a4:	eb46 0606 	adc.w	r6, r6, r6
 80006a8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006ac:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006b0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006b4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006b8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006bc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006c0:	bf88      	it	hi
 80006c2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006c6:	d81e      	bhi.n	8000706 <__aeabi_dmul+0xde>
 80006c8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006cc:	bf08      	it	eq
 80006ce:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006d2:	f150 0000 	adcs.w	r0, r0, #0
 80006d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006e0:	ea46 0101 	orr.w	r1, r6, r1
 80006e4:	ea40 0002 	orr.w	r0, r0, r2
 80006e8:	ea81 0103 	eor.w	r1, r1, r3
 80006ec:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006f0:	bfc2      	ittt	gt
 80006f2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006f6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006fa:	bd70      	popgt	{r4, r5, r6, pc}
 80006fc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000700:	f04f 0e00 	mov.w	lr, #0
 8000704:	3c01      	subs	r4, #1
 8000706:	f300 80ab 	bgt.w	8000860 <__aeabi_dmul+0x238>
 800070a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800070e:	bfde      	ittt	le
 8000710:	2000      	movle	r0, #0
 8000712:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000716:	bd70      	pople	{r4, r5, r6, pc}
 8000718:	f1c4 0400 	rsb	r4, r4, #0
 800071c:	3c20      	subs	r4, #32
 800071e:	da35      	bge.n	800078c <__aeabi_dmul+0x164>
 8000720:	340c      	adds	r4, #12
 8000722:	dc1b      	bgt.n	800075c <__aeabi_dmul+0x134>
 8000724:	f104 0414 	add.w	r4, r4, #20
 8000728:	f1c4 0520 	rsb	r5, r4, #32
 800072c:	fa00 f305 	lsl.w	r3, r0, r5
 8000730:	fa20 f004 	lsr.w	r0, r0, r4
 8000734:	fa01 f205 	lsl.w	r2, r1, r5
 8000738:	ea40 0002 	orr.w	r0, r0, r2
 800073c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000740:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000744:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000748:	fa21 f604 	lsr.w	r6, r1, r4
 800074c:	eb42 0106 	adc.w	r1, r2, r6
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 040c 	rsb	r4, r4, #12
 8000760:	f1c4 0520 	rsb	r5, r4, #32
 8000764:	fa00 f304 	lsl.w	r3, r0, r4
 8000768:	fa20 f005 	lsr.w	r0, r0, r5
 800076c:	fa01 f204 	lsl.w	r2, r1, r4
 8000770:	ea40 0002 	orr.w	r0, r0, r2
 8000774:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000778:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800077c:	f141 0100 	adc.w	r1, r1, #0
 8000780:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000784:	bf08      	it	eq
 8000786:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f1c4 0520 	rsb	r5, r4, #32
 8000790:	fa00 f205 	lsl.w	r2, r0, r5
 8000794:	ea4e 0e02 	orr.w	lr, lr, r2
 8000798:	fa20 f304 	lsr.w	r3, r0, r4
 800079c:	fa01 f205 	lsl.w	r2, r1, r5
 80007a0:	ea43 0302 	orr.w	r3, r3, r2
 80007a4:	fa21 f004 	lsr.w	r0, r1, r4
 80007a8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007ac:	fa21 f204 	lsr.w	r2, r1, r4
 80007b0:	ea20 0002 	bic.w	r0, r0, r2
 80007b4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007bc:	bf08      	it	eq
 80007be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007c2:	bd70      	pop	{r4, r5, r6, pc}
 80007c4:	f094 0f00 	teq	r4, #0
 80007c8:	d10f      	bne.n	80007ea <__aeabi_dmul+0x1c2>
 80007ca:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ce:	0040      	lsls	r0, r0, #1
 80007d0:	eb41 0101 	adc.w	r1, r1, r1
 80007d4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3c01      	subeq	r4, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1a6>
 80007de:	ea41 0106 	orr.w	r1, r1, r6
 80007e2:	f095 0f00 	teq	r5, #0
 80007e6:	bf18      	it	ne
 80007e8:	4770      	bxne	lr
 80007ea:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ee:	0052      	lsls	r2, r2, #1
 80007f0:	eb43 0303 	adc.w	r3, r3, r3
 80007f4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007f8:	bf08      	it	eq
 80007fa:	3d01      	subeq	r5, #1
 80007fc:	d0f7      	beq.n	80007ee <__aeabi_dmul+0x1c6>
 80007fe:	ea43 0306 	orr.w	r3, r3, r6
 8000802:	4770      	bx	lr
 8000804:	ea94 0f0c 	teq	r4, ip
 8000808:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800080c:	bf18      	it	ne
 800080e:	ea95 0f0c 	teqne	r5, ip
 8000812:	d00c      	beq.n	800082e <__aeabi_dmul+0x206>
 8000814:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000818:	bf18      	it	ne
 800081a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081e:	d1d1      	bne.n	80007c4 <__aeabi_dmul+0x19c>
 8000820:	ea81 0103 	eor.w	r1, r1, r3
 8000824:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000828:	f04f 0000 	mov.w	r0, #0
 800082c:	bd70      	pop	{r4, r5, r6, pc}
 800082e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000832:	bf06      	itte	eq
 8000834:	4610      	moveq	r0, r2
 8000836:	4619      	moveq	r1, r3
 8000838:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800083c:	d019      	beq.n	8000872 <__aeabi_dmul+0x24a>
 800083e:	ea94 0f0c 	teq	r4, ip
 8000842:	d102      	bne.n	800084a <__aeabi_dmul+0x222>
 8000844:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000848:	d113      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800084a:	ea95 0f0c 	teq	r5, ip
 800084e:	d105      	bne.n	800085c <__aeabi_dmul+0x234>
 8000850:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000854:	bf1c      	itt	ne
 8000856:	4610      	movne	r0, r2
 8000858:	4619      	movne	r1, r3
 800085a:	d10a      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800085c:	ea81 0103 	eor.w	r1, r1, r3
 8000860:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000864:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000868:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800086c:	f04f 0000 	mov.w	r0, #0
 8000870:	bd70      	pop	{r4, r5, r6, pc}
 8000872:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000876:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800087a:	bd70      	pop	{r4, r5, r6, pc}

0800087c <__aeabi_ddiv>:
 800087c:	b570      	push	{r4, r5, r6, lr}
 800087e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000882:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000886:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800088a:	bf1d      	ittte	ne
 800088c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000890:	ea94 0f0c 	teqne	r4, ip
 8000894:	ea95 0f0c 	teqne	r5, ip
 8000898:	f000 f8a7 	bleq	80009ea <__aeabi_ddiv+0x16e>
 800089c:	eba4 0405 	sub.w	r4, r4, r5
 80008a0:	ea81 0e03 	eor.w	lr, r1, r3
 80008a4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008a8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008ac:	f000 8088 	beq.w	80009c0 <__aeabi_ddiv+0x144>
 80008b0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008b4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008b8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008bc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008c0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008c4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008c8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008cc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008d0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008d4:	429d      	cmp	r5, r3
 80008d6:	bf08      	it	eq
 80008d8:	4296      	cmpeq	r6, r2
 80008da:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008de:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008e2:	d202      	bcs.n	80008ea <__aeabi_ddiv+0x6e>
 80008e4:	085b      	lsrs	r3, r3, #1
 80008e6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ea:	1ab6      	subs	r6, r6, r2
 80008ec:	eb65 0503 	sbc.w	r5, r5, r3
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008fa:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000928:	085b      	lsrs	r3, r3, #1
 800092a:	ea4f 0232 	mov.w	r2, r2, rrx
 800092e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000932:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000936:	bf22      	ittt	cs
 8000938:	1ab6      	subcs	r6, r6, r2
 800093a:	4675      	movcs	r5, lr
 800093c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000940:	085b      	lsrs	r3, r3, #1
 8000942:	ea4f 0232 	mov.w	r2, r2, rrx
 8000946:	ebb6 0e02 	subs.w	lr, r6, r2
 800094a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800094e:	bf22      	ittt	cs
 8000950:	1ab6      	subcs	r6, r6, r2
 8000952:	4675      	movcs	r5, lr
 8000954:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000958:	ea55 0e06 	orrs.w	lr, r5, r6
 800095c:	d018      	beq.n	8000990 <__aeabi_ddiv+0x114>
 800095e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000962:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000966:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800096a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800096e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000972:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000976:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800097a:	d1c0      	bne.n	80008fe <__aeabi_ddiv+0x82>
 800097c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000980:	d10b      	bne.n	800099a <__aeabi_ddiv+0x11e>
 8000982:	ea41 0100 	orr.w	r1, r1, r0
 8000986:	f04f 0000 	mov.w	r0, #0
 800098a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800098e:	e7b6      	b.n	80008fe <__aeabi_ddiv+0x82>
 8000990:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000994:	bf04      	itt	eq
 8000996:	4301      	orreq	r1, r0
 8000998:	2000      	moveq	r0, #0
 800099a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800099e:	bf88      	it	hi
 80009a0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009a4:	f63f aeaf 	bhi.w	8000706 <__aeabi_dmul+0xde>
 80009a8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009ac:	bf04      	itt	eq
 80009ae:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009b6:	f150 0000 	adcs.w	r0, r0, #0
 80009ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009be:	bd70      	pop	{r4, r5, r6, pc}
 80009c0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009c4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009c8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009cc:	bfc2      	ittt	gt
 80009ce:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009d2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009d6:	bd70      	popgt	{r4, r5, r6, pc}
 80009d8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009dc:	f04f 0e00 	mov.w	lr, #0
 80009e0:	3c01      	subs	r4, #1
 80009e2:	e690      	b.n	8000706 <__aeabi_dmul+0xde>
 80009e4:	ea45 0e06 	orr.w	lr, r5, r6
 80009e8:	e68d      	b.n	8000706 <__aeabi_dmul+0xde>
 80009ea:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ee:	ea94 0f0c 	teq	r4, ip
 80009f2:	bf08      	it	eq
 80009f4:	ea95 0f0c 	teqeq	r5, ip
 80009f8:	f43f af3b 	beq.w	8000872 <__aeabi_dmul+0x24a>
 80009fc:	ea94 0f0c 	teq	r4, ip
 8000a00:	d10a      	bne.n	8000a18 <__aeabi_ddiv+0x19c>
 8000a02:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a06:	f47f af34 	bne.w	8000872 <__aeabi_dmul+0x24a>
 8000a0a:	ea95 0f0c 	teq	r5, ip
 8000a0e:	f47f af25 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a12:	4610      	mov	r0, r2
 8000a14:	4619      	mov	r1, r3
 8000a16:	e72c      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a18:	ea95 0f0c 	teq	r5, ip
 8000a1c:	d106      	bne.n	8000a2c <__aeabi_ddiv+0x1b0>
 8000a1e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a22:	f43f aefd 	beq.w	8000820 <__aeabi_dmul+0x1f8>
 8000a26:	4610      	mov	r0, r2
 8000a28:	4619      	mov	r1, r3
 8000a2a:	e722      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a2c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a30:	bf18      	it	ne
 8000a32:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a36:	f47f aec5 	bne.w	80007c4 <__aeabi_dmul+0x19c>
 8000a3a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a3e:	f47f af0d 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a42:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a46:	f47f aeeb 	bne.w	8000820 <__aeabi_dmul+0x1f8>
 8000a4a:	e712      	b.n	8000872 <__aeabi_dmul+0x24a>

08000a4c <__aeabi_d2f>:
 8000a4c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a50:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000a54:	bf24      	itt	cs
 8000a56:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000a5a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000a5e:	d90d      	bls.n	8000a7c <__aeabi_d2f+0x30>
 8000a60:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000a64:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000a68:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000a6c:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000a70:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000a74:	bf08      	it	eq
 8000a76:	f020 0001 	biceq.w	r0, r0, #1
 8000a7a:	4770      	bx	lr
 8000a7c:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000a80:	d121      	bne.n	8000ac6 <__aeabi_d2f+0x7a>
 8000a82:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000a86:	bfbc      	itt	lt
 8000a88:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000a8c:	4770      	bxlt	lr
 8000a8e:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000a92:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000a96:	f1c2 0218 	rsb	r2, r2, #24
 8000a9a:	f1c2 0c20 	rsb	ip, r2, #32
 8000a9e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000aa2:	fa20 f002 	lsr.w	r0, r0, r2
 8000aa6:	bf18      	it	ne
 8000aa8:	f040 0001 	orrne.w	r0, r0, #1
 8000aac:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ab0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000ab4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000ab8:	ea40 000c 	orr.w	r0, r0, ip
 8000abc:	fa23 f302 	lsr.w	r3, r3, r2
 8000ac0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000ac4:	e7cc      	b.n	8000a60 <__aeabi_d2f+0x14>
 8000ac6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000aca:	d107      	bne.n	8000adc <__aeabi_d2f+0x90>
 8000acc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000ad0:	bf1e      	ittt	ne
 8000ad2:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000ad6:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000ada:	4770      	bxne	lr
 8000adc:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000ae0:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000ae4:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000ae8:	4770      	bx	lr
 8000aea:	bf00      	nop

08000aec <pa1_adc_init>:
#define CR2_ADON		(1U<<0)
#define CR2_SWStart		(1U<<30)
#define SR_EOC			(1U<<1) // end of conversion

void pa1_adc_init(void)
{
 8000aec:	b480      	push	{r7}
 8000aee:	af00      	add	r7, sp, #0
	// Config ADC GPIO pin


	// enable clock access to GPIOA  pin port (PA1)
	RCC->AHB1ENR |= GPIOAEN;
 8000af0:	4b14      	ldr	r3, [pc, #80]	@ (8000b44 <pa1_adc_init+0x58>)
 8000af2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000af4:	4a13      	ldr	r2, [pc, #76]	@ (8000b44 <pa1_adc_init+0x58>)
 8000af6:	f043 0301 	orr.w	r3, r3, #1
 8000afa:	6313      	str	r3, [r2, #48]	@ 0x30
	// set mode of PA1 to analog mode (mode register)
	GPIOA->MODER |= (1U<<2);
 8000afc:	4b12      	ldr	r3, [pc, #72]	@ (8000b48 <pa1_adc_init+0x5c>)
 8000afe:	681b      	ldr	r3, [r3, #0]
 8000b00:	4a11      	ldr	r2, [pc, #68]	@ (8000b48 <pa1_adc_init+0x5c>)
 8000b02:	f043 0304 	orr.w	r3, r3, #4
 8000b06:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<3);
 8000b08:	4b0f      	ldr	r3, [pc, #60]	@ (8000b48 <pa1_adc_init+0x5c>)
 8000b0a:	681b      	ldr	r3, [r3, #0]
 8000b0c:	4a0e      	ldr	r2, [pc, #56]	@ (8000b48 <pa1_adc_init+0x5c>)
 8000b0e:	f043 0308 	orr.w	r3, r3, #8
 8000b12:	6013      	str	r3, [r2, #0]


	// enable clock access to ADC Module
	RCC->APB2ENR |= ADC1EN;
 8000b14:	4b0b      	ldr	r3, [pc, #44]	@ (8000b44 <pa1_adc_init+0x58>)
 8000b16:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000b18:	4a0a      	ldr	r2, [pc, #40]	@ (8000b44 <pa1_adc_init+0x58>)
 8000b1a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000b1e:	6453      	str	r3, [r2, #68]	@ 0x44

	// Conversion sequence start
	ADC1->SQR3 = ADC_CH1;
 8000b20:	4b0a      	ldr	r3, [pc, #40]	@ (8000b4c <pa1_adc_init+0x60>)
 8000b22:	2201      	movs	r2, #1
 8000b24:	635a      	str	r2, [r3, #52]	@ 0x34
	// Conversion sequence length
	ADC1->SQR1 = ADC_SEQ_LEN;
 8000b26:	4b09      	ldr	r3, [pc, #36]	@ (8000b4c <pa1_adc_init+0x60>)
 8000b28:	2200      	movs	r2, #0
 8000b2a:	62da      	str	r2, [r3, #44]	@ 0x2c
	// Enable the ADC module
	ADC1->CR2 |= CR2_ADON;
 8000b2c:	4b07      	ldr	r3, [pc, #28]	@ (8000b4c <pa1_adc_init+0x60>)
 8000b2e:	689b      	ldr	r3, [r3, #8]
 8000b30:	4a06      	ldr	r2, [pc, #24]	@ (8000b4c <pa1_adc_init+0x60>)
 8000b32:	f043 0301 	orr.w	r3, r3, #1
 8000b36:	6093      	str	r3, [r2, #8]
}
 8000b38:	bf00      	nop
 8000b3a:	46bd      	mov	sp, r7
 8000b3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b40:	4770      	bx	lr
 8000b42:	bf00      	nop
 8000b44:	40023800 	.word	0x40023800
 8000b48:	40020000 	.word	0x40020000
 8000b4c:	40012000 	.word	0x40012000

08000b50 <start_conversion>:


void start_conversion(void)
{
 8000b50:	b480      	push	{r7}
 8000b52:	af00      	add	r7, sp, #0
	ADC1->CR2 |= CR2_SWStart;
 8000b54:	4b05      	ldr	r3, [pc, #20]	@ (8000b6c <start_conversion+0x1c>)
 8000b56:	689b      	ldr	r3, [r3, #8]
 8000b58:	4a04      	ldr	r2, [pc, #16]	@ (8000b6c <start_conversion+0x1c>)
 8000b5a:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8000b5e:	6093      	str	r3, [r2, #8]
}
 8000b60:	bf00      	nop
 8000b62:	46bd      	mov	sp, r7
 8000b64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b68:	4770      	bx	lr
 8000b6a:	bf00      	nop
 8000b6c:	40012000 	.word	0x40012000

08000b70 <adc_read>:


uint32_t adc_read(void)
{
 8000b70:	b480      	push	{r7}
 8000b72:	af00      	add	r7, sp, #0
	// Wait for conversion to complete
	while(!(ADC1->SR & SR_EOC)){}
 8000b74:	bf00      	nop
 8000b76:	4b06      	ldr	r3, [pc, #24]	@ (8000b90 <adc_read+0x20>)
 8000b78:	681b      	ldr	r3, [r3, #0]
 8000b7a:	f003 0302 	and.w	r3, r3, #2
 8000b7e:	2b00      	cmp	r3, #0
 8000b80:	d0f9      	beq.n	8000b76 <adc_read+0x6>
	// Read converted result
	return (ADC1->DR);
 8000b82:	4b03      	ldr	r3, [pc, #12]	@ (8000b90 <adc_read+0x20>)
 8000b84:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
}
 8000b86:	4618      	mov	r0, r3
 8000b88:	46bd      	mov	sp, r7
 8000b8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b8e:	4770      	bx	lr
 8000b90:	40012000 	.word	0x40012000
 8000b94:	00000000 	.word	0x00000000

08000b98 <main>:
#include "adc.h"

uint32_t sensor_value;
float temp;
int main(void)
{
 8000b98:	b580      	push	{r7, lr}
 8000b9a:	b082      	sub	sp, #8
 8000b9c:	af00      	add	r7, sp, #0



	uart2_tx_init();
 8000b9e:	f000 f90b 	bl	8000db8 <uart2_tx_init>
	pa1_adc_init();
 8000ba2:	f7ff ffa3 	bl	8000aec <pa1_adc_init>
	//adc_read();


	while(1)
	{
		start_conversion();
 8000ba6:	f7ff ffd3 	bl	8000b50 <start_conversion>
		sensor_value = adc_read();
 8000baa:	f7ff ffe1 	bl	8000b70 <adc_read>
 8000bae:	4603      	mov	r3, r0
 8000bb0:	4a23      	ldr	r2, [pc, #140]	@ (8000c40 <main+0xa8>)
 8000bb2:	6013      	str	r3, [r2, #0]
		temp = (sensor_value * 3.3 / 4096) * 100; // Calculate the temperature
 8000bb4:	4b22      	ldr	r3, [pc, #136]	@ (8000c40 <main+0xa8>)
 8000bb6:	681b      	ldr	r3, [r3, #0]
 8000bb8:	4618      	mov	r0, r3
 8000bba:	f7ff fcbb 	bl	8000534 <__aeabi_ui2d>
 8000bbe:	a31e      	add	r3, pc, #120	@ (adr r3, 8000c38 <main+0xa0>)
 8000bc0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000bc4:	f7ff fd30 	bl	8000628 <__aeabi_dmul>
 8000bc8:	4602      	mov	r2, r0
 8000bca:	460b      	mov	r3, r1
 8000bcc:	4610      	mov	r0, r2
 8000bce:	4619      	mov	r1, r3
 8000bd0:	f04f 0200 	mov.w	r2, #0
 8000bd4:	4b1b      	ldr	r3, [pc, #108]	@ (8000c44 <main+0xac>)
 8000bd6:	f7ff fe51 	bl	800087c <__aeabi_ddiv>
 8000bda:	4602      	mov	r2, r0
 8000bdc:	460b      	mov	r3, r1
 8000bde:	4610      	mov	r0, r2
 8000be0:	4619      	mov	r1, r3
 8000be2:	f04f 0200 	mov.w	r2, #0
 8000be6:	4b18      	ldr	r3, [pc, #96]	@ (8000c48 <main+0xb0>)
 8000be8:	f7ff fd1e 	bl	8000628 <__aeabi_dmul>
 8000bec:	4602      	mov	r2, r0
 8000bee:	460b      	mov	r3, r1
 8000bf0:	4610      	mov	r0, r2
 8000bf2:	4619      	mov	r1, r3
 8000bf4:	f7ff ff2a 	bl	8000a4c <__aeabi_d2f>
 8000bf8:	4603      	mov	r3, r0
 8000bfa:	4a14      	ldr	r2, [pc, #80]	@ (8000c4c <main+0xb4>)
 8000bfc:	6013      	str	r3, [r2, #0]
		printf("Sensor value : %d ", (int)((sensor_value * 3 / 4096) * 100) );
 8000bfe:	4b10      	ldr	r3, [pc, #64]	@ (8000c40 <main+0xa8>)
 8000c00:	681a      	ldr	r2, [r3, #0]
 8000c02:	4613      	mov	r3, r2
 8000c04:	005b      	lsls	r3, r3, #1
 8000c06:	4413      	add	r3, r2
 8000c08:	0b1b      	lsrs	r3, r3, #12
 8000c0a:	2264      	movs	r2, #100	@ 0x64
 8000c0c:	fb02 f303 	mul.w	r3, r2, r3
 8000c10:	4619      	mov	r1, r3
 8000c12:	480f      	ldr	r0, [pc, #60]	@ (8000c50 <main+0xb8>)
 8000c14:	f000 fa46 	bl	80010a4 <iprintf>
		printf("eow");
 8000c18:	480e      	ldr	r0, [pc, #56]	@ (8000c54 <main+0xbc>)
 8000c1a:	f000 fa43 	bl	80010a4 <iprintf>
		for(int i = 0; i < 30000; i++);
 8000c1e:	2300      	movs	r3, #0
 8000c20:	607b      	str	r3, [r7, #4]
 8000c22:	e002      	b.n	8000c2a <main+0x92>
 8000c24:	687b      	ldr	r3, [r7, #4]
 8000c26:	3301      	adds	r3, #1
 8000c28:	607b      	str	r3, [r7, #4]
 8000c2a:	687b      	ldr	r3, [r7, #4]
 8000c2c:	f247 522f 	movw	r2, #29999	@ 0x752f
 8000c30:	4293      	cmp	r3, r2
 8000c32:	ddf7      	ble.n	8000c24 <main+0x8c>
		start_conversion();
 8000c34:	e7b7      	b.n	8000ba6 <main+0xe>
 8000c36:	bf00      	nop
 8000c38:	66666666 	.word	0x66666666
 8000c3c:	400a6666 	.word	0x400a6666
 8000c40:	20000078 	.word	0x20000078
 8000c44:	40b00000 	.word	0x40b00000
 8000c48:	40590000 	.word	0x40590000
 8000c4c:	2000007c 	.word	0x2000007c
 8000c50:	08001d94 	.word	0x08001d94
 8000c54:	08001da8 	.word	0x08001da8

08000c58 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000c58:	b580      	push	{r7, lr}
 8000c5a:	b086      	sub	sp, #24
 8000c5c:	af00      	add	r7, sp, #0
 8000c5e:	60f8      	str	r0, [r7, #12]
 8000c60:	60b9      	str	r1, [r7, #8]
 8000c62:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000c64:	2300      	movs	r3, #0
 8000c66:	617b      	str	r3, [r7, #20]
 8000c68:	e00a      	b.n	8000c80 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000c6a:	f3af 8000 	nop.w
 8000c6e:	4601      	mov	r1, r0
 8000c70:	68bb      	ldr	r3, [r7, #8]
 8000c72:	1c5a      	adds	r2, r3, #1
 8000c74:	60ba      	str	r2, [r7, #8]
 8000c76:	b2ca      	uxtb	r2, r1
 8000c78:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000c7a:	697b      	ldr	r3, [r7, #20]
 8000c7c:	3301      	adds	r3, #1
 8000c7e:	617b      	str	r3, [r7, #20]
 8000c80:	697a      	ldr	r2, [r7, #20]
 8000c82:	687b      	ldr	r3, [r7, #4]
 8000c84:	429a      	cmp	r2, r3
 8000c86:	dbf0      	blt.n	8000c6a <_read+0x12>
  }

  return len;
 8000c88:	687b      	ldr	r3, [r7, #4]
}
 8000c8a:	4618      	mov	r0, r3
 8000c8c:	3718      	adds	r7, #24
 8000c8e:	46bd      	mov	sp, r7
 8000c90:	bd80      	pop	{r7, pc}

08000c92 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000c92:	b580      	push	{r7, lr}
 8000c94:	b086      	sub	sp, #24
 8000c96:	af00      	add	r7, sp, #0
 8000c98:	60f8      	str	r0, [r7, #12]
 8000c9a:	60b9      	str	r1, [r7, #8]
 8000c9c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000c9e:	2300      	movs	r3, #0
 8000ca0:	617b      	str	r3, [r7, #20]
 8000ca2:	e009      	b.n	8000cb8 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000ca4:	68bb      	ldr	r3, [r7, #8]
 8000ca6:	1c5a      	adds	r2, r3, #1
 8000ca8:	60ba      	str	r2, [r7, #8]
 8000caa:	781b      	ldrb	r3, [r3, #0]
 8000cac:	4618      	mov	r0, r3
 8000cae:	f000 f877 	bl	8000da0 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000cb2:	697b      	ldr	r3, [r7, #20]
 8000cb4:	3301      	adds	r3, #1
 8000cb6:	617b      	str	r3, [r7, #20]
 8000cb8:	697a      	ldr	r2, [r7, #20]
 8000cba:	687b      	ldr	r3, [r7, #4]
 8000cbc:	429a      	cmp	r2, r3
 8000cbe:	dbf1      	blt.n	8000ca4 <_write+0x12>
  }
  return len;
 8000cc0:	687b      	ldr	r3, [r7, #4]
}
 8000cc2:	4618      	mov	r0, r3
 8000cc4:	3718      	adds	r7, #24
 8000cc6:	46bd      	mov	sp, r7
 8000cc8:	bd80      	pop	{r7, pc}

08000cca <_close>:

int _close(int file)
{
 8000cca:	b480      	push	{r7}
 8000ccc:	b083      	sub	sp, #12
 8000cce:	af00      	add	r7, sp, #0
 8000cd0:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000cd2:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000cd6:	4618      	mov	r0, r3
 8000cd8:	370c      	adds	r7, #12
 8000cda:	46bd      	mov	sp, r7
 8000cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ce0:	4770      	bx	lr

08000ce2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000ce2:	b480      	push	{r7}
 8000ce4:	b083      	sub	sp, #12
 8000ce6:	af00      	add	r7, sp, #0
 8000ce8:	6078      	str	r0, [r7, #4]
 8000cea:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000cec:	683b      	ldr	r3, [r7, #0]
 8000cee:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000cf2:	605a      	str	r2, [r3, #4]
  return 0;
 8000cf4:	2300      	movs	r3, #0
}
 8000cf6:	4618      	mov	r0, r3
 8000cf8:	370c      	adds	r7, #12
 8000cfa:	46bd      	mov	sp, r7
 8000cfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d00:	4770      	bx	lr

08000d02 <_isatty>:

int _isatty(int file)
{
 8000d02:	b480      	push	{r7}
 8000d04:	b083      	sub	sp, #12
 8000d06:	af00      	add	r7, sp, #0
 8000d08:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000d0a:	2301      	movs	r3, #1
}
 8000d0c:	4618      	mov	r0, r3
 8000d0e:	370c      	adds	r7, #12
 8000d10:	46bd      	mov	sp, r7
 8000d12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d16:	4770      	bx	lr

08000d18 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000d18:	b480      	push	{r7}
 8000d1a:	b085      	sub	sp, #20
 8000d1c:	af00      	add	r7, sp, #0
 8000d1e:	60f8      	str	r0, [r7, #12]
 8000d20:	60b9      	str	r1, [r7, #8]
 8000d22:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000d24:	2300      	movs	r3, #0
}
 8000d26:	4618      	mov	r0, r3
 8000d28:	3714      	adds	r7, #20
 8000d2a:	46bd      	mov	sp, r7
 8000d2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d30:	4770      	bx	lr
	...

08000d34 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000d34:	b580      	push	{r7, lr}
 8000d36:	b086      	sub	sp, #24
 8000d38:	af00      	add	r7, sp, #0
 8000d3a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000d3c:	4a14      	ldr	r2, [pc, #80]	@ (8000d90 <_sbrk+0x5c>)
 8000d3e:	4b15      	ldr	r3, [pc, #84]	@ (8000d94 <_sbrk+0x60>)
 8000d40:	1ad3      	subs	r3, r2, r3
 8000d42:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000d44:	697b      	ldr	r3, [r7, #20]
 8000d46:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000d48:	4b13      	ldr	r3, [pc, #76]	@ (8000d98 <_sbrk+0x64>)
 8000d4a:	681b      	ldr	r3, [r3, #0]
 8000d4c:	2b00      	cmp	r3, #0
 8000d4e:	d102      	bne.n	8000d56 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000d50:	4b11      	ldr	r3, [pc, #68]	@ (8000d98 <_sbrk+0x64>)
 8000d52:	4a12      	ldr	r2, [pc, #72]	@ (8000d9c <_sbrk+0x68>)
 8000d54:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000d56:	4b10      	ldr	r3, [pc, #64]	@ (8000d98 <_sbrk+0x64>)
 8000d58:	681a      	ldr	r2, [r3, #0]
 8000d5a:	687b      	ldr	r3, [r7, #4]
 8000d5c:	4413      	add	r3, r2
 8000d5e:	693a      	ldr	r2, [r7, #16]
 8000d60:	429a      	cmp	r2, r3
 8000d62:	d207      	bcs.n	8000d74 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000d64:	f000 fa42 	bl	80011ec <__errno>
 8000d68:	4603      	mov	r3, r0
 8000d6a:	220c      	movs	r2, #12
 8000d6c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000d6e:	f04f 33ff 	mov.w	r3, #4294967295
 8000d72:	e009      	b.n	8000d88 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000d74:	4b08      	ldr	r3, [pc, #32]	@ (8000d98 <_sbrk+0x64>)
 8000d76:	681b      	ldr	r3, [r3, #0]
 8000d78:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000d7a:	4b07      	ldr	r3, [pc, #28]	@ (8000d98 <_sbrk+0x64>)
 8000d7c:	681a      	ldr	r2, [r3, #0]
 8000d7e:	687b      	ldr	r3, [r7, #4]
 8000d80:	4413      	add	r3, r2
 8000d82:	4a05      	ldr	r2, [pc, #20]	@ (8000d98 <_sbrk+0x64>)
 8000d84:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000d86:	68fb      	ldr	r3, [r7, #12]
}
 8000d88:	4618      	mov	r0, r3
 8000d8a:	3718      	adds	r7, #24
 8000d8c:	46bd      	mov	sp, r7
 8000d8e:	bd80      	pop	{r7, pc}
 8000d90:	20020000 	.word	0x20020000
 8000d94:	00000400 	.word	0x00000400
 8000d98:	20000080 	.word	0x20000080
 8000d9c:	200001d0 	.word	0x200001d0

08000da0 <__io_putchar>:

void uart2_write(int ch);


int __io_putchar(int ch)
{
 8000da0:	b580      	push	{r7, lr}
 8000da2:	b082      	sub	sp, #8
 8000da4:	af00      	add	r7, sp, #0
 8000da6:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 8000da8:	6878      	ldr	r0, [r7, #4]
 8000daa:	f000 f851 	bl	8000e50 <uart2_write>
	return ch;
 8000dae:	687b      	ldr	r3, [r7, #4]
}
 8000db0:	4618      	mov	r0, r3
 8000db2:	3708      	adds	r7, #8
 8000db4:	46bd      	mov	sp, r7
 8000db6:	bd80      	pop	{r7, pc}

08000db8 <uart2_tx_init>:

void uart2_tx_init(void)
{
 8000db8:	b580      	push	{r7, lr}
 8000dba:	af00      	add	r7, sp, #0
	/****************Configure uart gpio pin***************/
	/*Enable clock access to gpioa */
	RCC->AHB1ENR |= GPIOAEN;
 8000dbc:	4b20      	ldr	r3, [pc, #128]	@ (8000e40 <uart2_tx_init+0x88>)
 8000dbe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000dc0:	4a1f      	ldr	r2, [pc, #124]	@ (8000e40 <uart2_tx_init+0x88>)
 8000dc2:	f043 0301 	orr.w	r3, r3, #1
 8000dc6:	6313      	str	r3, [r2, #48]	@ 0x30

	/*Set PA2 mode to alternate function mode*/
	GPIOA->MODER &=~(1U<<4);
 8000dc8:	4b1e      	ldr	r3, [pc, #120]	@ (8000e44 <uart2_tx_init+0x8c>)
 8000dca:	681b      	ldr	r3, [r3, #0]
 8000dcc:	4a1d      	ldr	r2, [pc, #116]	@ (8000e44 <uart2_tx_init+0x8c>)
 8000dce:	f023 0310 	bic.w	r3, r3, #16
 8000dd2:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<5);
 8000dd4:	4b1b      	ldr	r3, [pc, #108]	@ (8000e44 <uart2_tx_init+0x8c>)
 8000dd6:	681b      	ldr	r3, [r3, #0]
 8000dd8:	4a1a      	ldr	r2, [pc, #104]	@ (8000e44 <uart2_tx_init+0x8c>)
 8000dda:	f043 0320 	orr.w	r3, r3, #32
 8000dde:	6013      	str	r3, [r2, #0]

	/*Set PA2 alternate function type to UART_TX (AF07)*/
	GPIOA->AFR[0] |= (1U<<8);
 8000de0:	4b18      	ldr	r3, [pc, #96]	@ (8000e44 <uart2_tx_init+0x8c>)
 8000de2:	6a1b      	ldr	r3, [r3, #32]
 8000de4:	4a17      	ldr	r2, [pc, #92]	@ (8000e44 <uart2_tx_init+0x8c>)
 8000de6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000dea:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<9);
 8000dec:	4b15      	ldr	r3, [pc, #84]	@ (8000e44 <uart2_tx_init+0x8c>)
 8000dee:	6a1b      	ldr	r3, [r3, #32]
 8000df0:	4a14      	ldr	r2, [pc, #80]	@ (8000e44 <uart2_tx_init+0x8c>)
 8000df2:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000df6:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<10);
 8000df8:	4b12      	ldr	r3, [pc, #72]	@ (8000e44 <uart2_tx_init+0x8c>)
 8000dfa:	6a1b      	ldr	r3, [r3, #32]
 8000dfc:	4a11      	ldr	r2, [pc, #68]	@ (8000e44 <uart2_tx_init+0x8c>)
 8000dfe:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000e02:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~(1U<<11);
 8000e04:	4b0f      	ldr	r3, [pc, #60]	@ (8000e44 <uart2_tx_init+0x8c>)
 8000e06:	6a1b      	ldr	r3, [r3, #32]
 8000e08:	4a0e      	ldr	r2, [pc, #56]	@ (8000e44 <uart2_tx_init+0x8c>)
 8000e0a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8000e0e:	6213      	str	r3, [r2, #32]


	/****************Configure uart module ***************/
	/*Enable clock access to uart2 */
	RCC->APB1ENR |= UART2EN;
 8000e10:	4b0b      	ldr	r3, [pc, #44]	@ (8000e40 <uart2_tx_init+0x88>)
 8000e12:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000e14:	4a0a      	ldr	r2, [pc, #40]	@ (8000e40 <uart2_tx_init+0x88>)
 8000e16:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000e1a:	6413      	str	r3, [r2, #64]	@ 0x40

	/*Configure baudrate*/
	uart_set_baudrate(USART2,APB1_CLK,UART_BAUDRATE);
 8000e1c:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8000e20:	4909      	ldr	r1, [pc, #36]	@ (8000e48 <uart2_tx_init+0x90>)
 8000e22:	480a      	ldr	r0, [pc, #40]	@ (8000e4c <uart2_tx_init+0x94>)
 8000e24:	f000 f82c 	bl	8000e80 <uart_set_baudrate>

	/*Configure the transfer direction*/
	 USART2->CR1 =  CR1_TE;
 8000e28:	4b08      	ldr	r3, [pc, #32]	@ (8000e4c <uart2_tx_init+0x94>)
 8000e2a:	2208      	movs	r2, #8
 8000e2c:	60da      	str	r2, [r3, #12]

	/*Enable uart module*/
	 USART2->CR1 |= CR1_UE;
 8000e2e:	4b07      	ldr	r3, [pc, #28]	@ (8000e4c <uart2_tx_init+0x94>)
 8000e30:	68db      	ldr	r3, [r3, #12]
 8000e32:	4a06      	ldr	r2, [pc, #24]	@ (8000e4c <uart2_tx_init+0x94>)
 8000e34:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000e38:	60d3      	str	r3, [r2, #12]


}
 8000e3a:	bf00      	nop
 8000e3c:	bd80      	pop	{r7, pc}
 8000e3e:	bf00      	nop
 8000e40:	40023800 	.word	0x40023800
 8000e44:	40020000 	.word	0x40020000
 8000e48:	00f42400 	.word	0x00f42400
 8000e4c:	40004400 	.word	0x40004400

08000e50 <uart2_write>:

}


void uart2_write(int ch)
{
 8000e50:	b480      	push	{r7}
 8000e52:	b083      	sub	sp, #12
 8000e54:	af00      	add	r7, sp, #0
 8000e56:	6078      	str	r0, [r7, #4]
	while(!(USART2->SR & SR_TXE)){}
 8000e58:	bf00      	nop
 8000e5a:	4b08      	ldr	r3, [pc, #32]	@ (8000e7c <uart2_write+0x2c>)
 8000e5c:	681b      	ldr	r3, [r3, #0]
 8000e5e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000e62:	2b00      	cmp	r3, #0
 8000e64:	d0f9      	beq.n	8000e5a <uart2_write+0xa>

	 /*Write to transmit data register*/
		USART2->DR	=  (ch & 0xFF);
 8000e66:	687b      	ldr	r3, [r7, #4]
 8000e68:	4a04      	ldr	r2, [pc, #16]	@ (8000e7c <uart2_write+0x2c>)
 8000e6a:	b2db      	uxtb	r3, r3
 8000e6c:	6053      	str	r3, [r2, #4]
}
 8000e6e:	bf00      	nop
 8000e70:	370c      	adds	r7, #12
 8000e72:	46bd      	mov	sp, r7
 8000e74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e78:	4770      	bx	lr
 8000e7a:	bf00      	nop
 8000e7c:	40004400 	.word	0x40004400

08000e80 <uart_set_baudrate>:




static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk,  uint32_t BaudRate)
{
 8000e80:	b580      	push	{r7, lr}
 8000e82:	b084      	sub	sp, #16
 8000e84:	af00      	add	r7, sp, #0
 8000e86:	60f8      	str	r0, [r7, #12]
 8000e88:	60b9      	str	r1, [r7, #8]
 8000e8a:	607a      	str	r2, [r7, #4]
	USARTx->BRR =  compute_uart_bd(PeriphClk,BaudRate);
 8000e8c:	6879      	ldr	r1, [r7, #4]
 8000e8e:	68b8      	ldr	r0, [r7, #8]
 8000e90:	f000 f808 	bl	8000ea4 <compute_uart_bd>
 8000e94:	4603      	mov	r3, r0
 8000e96:	461a      	mov	r2, r3
 8000e98:	68fb      	ldr	r3, [r7, #12]
 8000e9a:	609a      	str	r2, [r3, #8]
}
 8000e9c:	bf00      	nop
 8000e9e:	3710      	adds	r7, #16
 8000ea0:	46bd      	mov	sp, r7
 8000ea2:	bd80      	pop	{r7, pc}

08000ea4 <compute_uart_bd>:

static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate)
{
 8000ea4:	b480      	push	{r7}
 8000ea6:	b083      	sub	sp, #12
 8000ea8:	af00      	add	r7, sp, #0
 8000eaa:	6078      	str	r0, [r7, #4]
 8000eac:	6039      	str	r1, [r7, #0]
	return ((PeriphClk + (BaudRate/2U))/BaudRate);
 8000eae:	683b      	ldr	r3, [r7, #0]
 8000eb0:	085a      	lsrs	r2, r3, #1
 8000eb2:	687b      	ldr	r3, [r7, #4]
 8000eb4:	441a      	add	r2, r3
 8000eb6:	683b      	ldr	r3, [r7, #0]
 8000eb8:	fbb2 f3f3 	udiv	r3, r2, r3
 8000ebc:	b29b      	uxth	r3, r3
}
 8000ebe:	4618      	mov	r0, r3
 8000ec0:	370c      	adds	r7, #12
 8000ec2:	46bd      	mov	sp, r7
 8000ec4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ec8:	4770      	bx	lr
	...

08000ecc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000ecc:	480d      	ldr	r0, [pc, #52]	@ (8000f04 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000ece:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000ed0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000ed4:	480c      	ldr	r0, [pc, #48]	@ (8000f08 <LoopForever+0x6>)
  ldr r1, =_edata
 8000ed6:	490d      	ldr	r1, [pc, #52]	@ (8000f0c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000ed8:	4a0d      	ldr	r2, [pc, #52]	@ (8000f10 <LoopForever+0xe>)
  movs r3, #0
 8000eda:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000edc:	e002      	b.n	8000ee4 <LoopCopyDataInit>

08000ede <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000ede:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000ee0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000ee2:	3304      	adds	r3, #4

08000ee4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000ee4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000ee6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000ee8:	d3f9      	bcc.n	8000ede <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000eea:	4a0a      	ldr	r2, [pc, #40]	@ (8000f14 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000eec:	4c0a      	ldr	r4, [pc, #40]	@ (8000f18 <LoopForever+0x16>)
  movs r3, #0
 8000eee:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000ef0:	e001      	b.n	8000ef6 <LoopFillZerobss>

08000ef2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000ef2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000ef4:	3204      	adds	r2, #4

08000ef6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000ef6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000ef8:	d3fb      	bcc.n	8000ef2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000efa:	f000 f97d 	bl	80011f8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000efe:	f7ff fe4b 	bl	8000b98 <main>

08000f02 <LoopForever>:

LoopForever:
  b LoopForever
 8000f02:	e7fe      	b.n	8000f02 <LoopForever>
  ldr   r0, =_estack
 8000f04:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000f08:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000f0c:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000f10:	08001df0 	.word	0x08001df0
  ldr r2, =_sbss
 8000f14:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000f18:	200001d0 	.word	0x200001d0

08000f1c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000f1c:	e7fe      	b.n	8000f1c <ADC_IRQHandler>
	...

08000f20 <std>:
 8000f20:	2300      	movs	r3, #0
 8000f22:	b510      	push	{r4, lr}
 8000f24:	4604      	mov	r4, r0
 8000f26:	e9c0 3300 	strd	r3, r3, [r0]
 8000f2a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000f2e:	6083      	str	r3, [r0, #8]
 8000f30:	8181      	strh	r1, [r0, #12]
 8000f32:	6643      	str	r3, [r0, #100]	@ 0x64
 8000f34:	81c2      	strh	r2, [r0, #14]
 8000f36:	6183      	str	r3, [r0, #24]
 8000f38:	4619      	mov	r1, r3
 8000f3a:	2208      	movs	r2, #8
 8000f3c:	305c      	adds	r0, #92	@ 0x5c
 8000f3e:	f000 f906 	bl	800114e <memset>
 8000f42:	4b0d      	ldr	r3, [pc, #52]	@ (8000f78 <std+0x58>)
 8000f44:	6263      	str	r3, [r4, #36]	@ 0x24
 8000f46:	4b0d      	ldr	r3, [pc, #52]	@ (8000f7c <std+0x5c>)
 8000f48:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000f4a:	4b0d      	ldr	r3, [pc, #52]	@ (8000f80 <std+0x60>)
 8000f4c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000f4e:	4b0d      	ldr	r3, [pc, #52]	@ (8000f84 <std+0x64>)
 8000f50:	6323      	str	r3, [r4, #48]	@ 0x30
 8000f52:	4b0d      	ldr	r3, [pc, #52]	@ (8000f88 <std+0x68>)
 8000f54:	6224      	str	r4, [r4, #32]
 8000f56:	429c      	cmp	r4, r3
 8000f58:	d006      	beq.n	8000f68 <std+0x48>
 8000f5a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000f5e:	4294      	cmp	r4, r2
 8000f60:	d002      	beq.n	8000f68 <std+0x48>
 8000f62:	33d0      	adds	r3, #208	@ 0xd0
 8000f64:	429c      	cmp	r4, r3
 8000f66:	d105      	bne.n	8000f74 <std+0x54>
 8000f68:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000f6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000f70:	f000 b966 	b.w	8001240 <__retarget_lock_init_recursive>
 8000f74:	bd10      	pop	{r4, pc}
 8000f76:	bf00      	nop
 8000f78:	080010c9 	.word	0x080010c9
 8000f7c:	080010eb 	.word	0x080010eb
 8000f80:	08001123 	.word	0x08001123
 8000f84:	08001147 	.word	0x08001147
 8000f88:	20000084 	.word	0x20000084

08000f8c <stdio_exit_handler>:
 8000f8c:	4a02      	ldr	r2, [pc, #8]	@ (8000f98 <stdio_exit_handler+0xc>)
 8000f8e:	4903      	ldr	r1, [pc, #12]	@ (8000f9c <stdio_exit_handler+0x10>)
 8000f90:	4803      	ldr	r0, [pc, #12]	@ (8000fa0 <stdio_exit_handler+0x14>)
 8000f92:	f000 b869 	b.w	8001068 <_fwalk_sglue>
 8000f96:	bf00      	nop
 8000f98:	20000000 	.word	0x20000000
 8000f9c:	08001add 	.word	0x08001add
 8000fa0:	20000010 	.word	0x20000010

08000fa4 <cleanup_stdio>:
 8000fa4:	6841      	ldr	r1, [r0, #4]
 8000fa6:	4b0c      	ldr	r3, [pc, #48]	@ (8000fd8 <cleanup_stdio+0x34>)
 8000fa8:	4299      	cmp	r1, r3
 8000faa:	b510      	push	{r4, lr}
 8000fac:	4604      	mov	r4, r0
 8000fae:	d001      	beq.n	8000fb4 <cleanup_stdio+0x10>
 8000fb0:	f000 fd94 	bl	8001adc <_fflush_r>
 8000fb4:	68a1      	ldr	r1, [r4, #8]
 8000fb6:	4b09      	ldr	r3, [pc, #36]	@ (8000fdc <cleanup_stdio+0x38>)
 8000fb8:	4299      	cmp	r1, r3
 8000fba:	d002      	beq.n	8000fc2 <cleanup_stdio+0x1e>
 8000fbc:	4620      	mov	r0, r4
 8000fbe:	f000 fd8d 	bl	8001adc <_fflush_r>
 8000fc2:	68e1      	ldr	r1, [r4, #12]
 8000fc4:	4b06      	ldr	r3, [pc, #24]	@ (8000fe0 <cleanup_stdio+0x3c>)
 8000fc6:	4299      	cmp	r1, r3
 8000fc8:	d004      	beq.n	8000fd4 <cleanup_stdio+0x30>
 8000fca:	4620      	mov	r0, r4
 8000fcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000fd0:	f000 bd84 	b.w	8001adc <_fflush_r>
 8000fd4:	bd10      	pop	{r4, pc}
 8000fd6:	bf00      	nop
 8000fd8:	20000084 	.word	0x20000084
 8000fdc:	200000ec 	.word	0x200000ec
 8000fe0:	20000154 	.word	0x20000154

08000fe4 <global_stdio_init.part.0>:
 8000fe4:	b510      	push	{r4, lr}
 8000fe6:	4b0b      	ldr	r3, [pc, #44]	@ (8001014 <global_stdio_init.part.0+0x30>)
 8000fe8:	4c0b      	ldr	r4, [pc, #44]	@ (8001018 <global_stdio_init.part.0+0x34>)
 8000fea:	4a0c      	ldr	r2, [pc, #48]	@ (800101c <global_stdio_init.part.0+0x38>)
 8000fec:	601a      	str	r2, [r3, #0]
 8000fee:	4620      	mov	r0, r4
 8000ff0:	2200      	movs	r2, #0
 8000ff2:	2104      	movs	r1, #4
 8000ff4:	f7ff ff94 	bl	8000f20 <std>
 8000ff8:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000ffc:	2201      	movs	r2, #1
 8000ffe:	2109      	movs	r1, #9
 8001000:	f7ff ff8e 	bl	8000f20 <std>
 8001004:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8001008:	2202      	movs	r2, #2
 800100a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800100e:	2112      	movs	r1, #18
 8001010:	f7ff bf86 	b.w	8000f20 <std>
 8001014:	200001bc 	.word	0x200001bc
 8001018:	20000084 	.word	0x20000084
 800101c:	08000f8d 	.word	0x08000f8d

08001020 <__sfp_lock_acquire>:
 8001020:	4801      	ldr	r0, [pc, #4]	@ (8001028 <__sfp_lock_acquire+0x8>)
 8001022:	f000 b90e 	b.w	8001242 <__retarget_lock_acquire_recursive>
 8001026:	bf00      	nop
 8001028:	200001c5 	.word	0x200001c5

0800102c <__sfp_lock_release>:
 800102c:	4801      	ldr	r0, [pc, #4]	@ (8001034 <__sfp_lock_release+0x8>)
 800102e:	f000 b909 	b.w	8001244 <__retarget_lock_release_recursive>
 8001032:	bf00      	nop
 8001034:	200001c5 	.word	0x200001c5

08001038 <__sinit>:
 8001038:	b510      	push	{r4, lr}
 800103a:	4604      	mov	r4, r0
 800103c:	f7ff fff0 	bl	8001020 <__sfp_lock_acquire>
 8001040:	6a23      	ldr	r3, [r4, #32]
 8001042:	b11b      	cbz	r3, 800104c <__sinit+0x14>
 8001044:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001048:	f7ff bff0 	b.w	800102c <__sfp_lock_release>
 800104c:	4b04      	ldr	r3, [pc, #16]	@ (8001060 <__sinit+0x28>)
 800104e:	6223      	str	r3, [r4, #32]
 8001050:	4b04      	ldr	r3, [pc, #16]	@ (8001064 <__sinit+0x2c>)
 8001052:	681b      	ldr	r3, [r3, #0]
 8001054:	2b00      	cmp	r3, #0
 8001056:	d1f5      	bne.n	8001044 <__sinit+0xc>
 8001058:	f7ff ffc4 	bl	8000fe4 <global_stdio_init.part.0>
 800105c:	e7f2      	b.n	8001044 <__sinit+0xc>
 800105e:	bf00      	nop
 8001060:	08000fa5 	.word	0x08000fa5
 8001064:	200001bc 	.word	0x200001bc

08001068 <_fwalk_sglue>:
 8001068:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800106c:	4607      	mov	r7, r0
 800106e:	4688      	mov	r8, r1
 8001070:	4614      	mov	r4, r2
 8001072:	2600      	movs	r6, #0
 8001074:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8001078:	f1b9 0901 	subs.w	r9, r9, #1
 800107c:	d505      	bpl.n	800108a <_fwalk_sglue+0x22>
 800107e:	6824      	ldr	r4, [r4, #0]
 8001080:	2c00      	cmp	r4, #0
 8001082:	d1f7      	bne.n	8001074 <_fwalk_sglue+0xc>
 8001084:	4630      	mov	r0, r6
 8001086:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800108a:	89ab      	ldrh	r3, [r5, #12]
 800108c:	2b01      	cmp	r3, #1
 800108e:	d907      	bls.n	80010a0 <_fwalk_sglue+0x38>
 8001090:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8001094:	3301      	adds	r3, #1
 8001096:	d003      	beq.n	80010a0 <_fwalk_sglue+0x38>
 8001098:	4629      	mov	r1, r5
 800109a:	4638      	mov	r0, r7
 800109c:	47c0      	blx	r8
 800109e:	4306      	orrs	r6, r0
 80010a0:	3568      	adds	r5, #104	@ 0x68
 80010a2:	e7e9      	b.n	8001078 <_fwalk_sglue+0x10>

080010a4 <iprintf>:
 80010a4:	b40f      	push	{r0, r1, r2, r3}
 80010a6:	b507      	push	{r0, r1, r2, lr}
 80010a8:	4906      	ldr	r1, [pc, #24]	@ (80010c4 <iprintf+0x20>)
 80010aa:	ab04      	add	r3, sp, #16
 80010ac:	6808      	ldr	r0, [r1, #0]
 80010ae:	f853 2b04 	ldr.w	r2, [r3], #4
 80010b2:	6881      	ldr	r1, [r0, #8]
 80010b4:	9301      	str	r3, [sp, #4]
 80010b6:	f000 f9e9 	bl	800148c <_vfiprintf_r>
 80010ba:	b003      	add	sp, #12
 80010bc:	f85d eb04 	ldr.w	lr, [sp], #4
 80010c0:	b004      	add	sp, #16
 80010c2:	4770      	bx	lr
 80010c4:	2000000c 	.word	0x2000000c

080010c8 <__sread>:
 80010c8:	b510      	push	{r4, lr}
 80010ca:	460c      	mov	r4, r1
 80010cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010d0:	f000 f868 	bl	80011a4 <_read_r>
 80010d4:	2800      	cmp	r0, #0
 80010d6:	bfab      	itete	ge
 80010d8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80010da:	89a3      	ldrhlt	r3, [r4, #12]
 80010dc:	181b      	addge	r3, r3, r0
 80010de:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80010e2:	bfac      	ite	ge
 80010e4:	6563      	strge	r3, [r4, #84]	@ 0x54
 80010e6:	81a3      	strhlt	r3, [r4, #12]
 80010e8:	bd10      	pop	{r4, pc}

080010ea <__swrite>:
 80010ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80010ee:	461f      	mov	r7, r3
 80010f0:	898b      	ldrh	r3, [r1, #12]
 80010f2:	05db      	lsls	r3, r3, #23
 80010f4:	4605      	mov	r5, r0
 80010f6:	460c      	mov	r4, r1
 80010f8:	4616      	mov	r6, r2
 80010fa:	d505      	bpl.n	8001108 <__swrite+0x1e>
 80010fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001100:	2302      	movs	r3, #2
 8001102:	2200      	movs	r2, #0
 8001104:	f000 f83c 	bl	8001180 <_lseek_r>
 8001108:	89a3      	ldrh	r3, [r4, #12]
 800110a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800110e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8001112:	81a3      	strh	r3, [r4, #12]
 8001114:	4632      	mov	r2, r6
 8001116:	463b      	mov	r3, r7
 8001118:	4628      	mov	r0, r5
 800111a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800111e:	f000 b853 	b.w	80011c8 <_write_r>

08001122 <__sseek>:
 8001122:	b510      	push	{r4, lr}
 8001124:	460c      	mov	r4, r1
 8001126:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800112a:	f000 f829 	bl	8001180 <_lseek_r>
 800112e:	1c43      	adds	r3, r0, #1
 8001130:	89a3      	ldrh	r3, [r4, #12]
 8001132:	bf15      	itete	ne
 8001134:	6560      	strne	r0, [r4, #84]	@ 0x54
 8001136:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800113a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800113e:	81a3      	strheq	r3, [r4, #12]
 8001140:	bf18      	it	ne
 8001142:	81a3      	strhne	r3, [r4, #12]
 8001144:	bd10      	pop	{r4, pc}

08001146 <__sclose>:
 8001146:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800114a:	f000 b809 	b.w	8001160 <_close_r>

0800114e <memset>:
 800114e:	4402      	add	r2, r0
 8001150:	4603      	mov	r3, r0
 8001152:	4293      	cmp	r3, r2
 8001154:	d100      	bne.n	8001158 <memset+0xa>
 8001156:	4770      	bx	lr
 8001158:	f803 1b01 	strb.w	r1, [r3], #1
 800115c:	e7f9      	b.n	8001152 <memset+0x4>
	...

08001160 <_close_r>:
 8001160:	b538      	push	{r3, r4, r5, lr}
 8001162:	4d06      	ldr	r5, [pc, #24]	@ (800117c <_close_r+0x1c>)
 8001164:	2300      	movs	r3, #0
 8001166:	4604      	mov	r4, r0
 8001168:	4608      	mov	r0, r1
 800116a:	602b      	str	r3, [r5, #0]
 800116c:	f7ff fdad 	bl	8000cca <_close>
 8001170:	1c43      	adds	r3, r0, #1
 8001172:	d102      	bne.n	800117a <_close_r+0x1a>
 8001174:	682b      	ldr	r3, [r5, #0]
 8001176:	b103      	cbz	r3, 800117a <_close_r+0x1a>
 8001178:	6023      	str	r3, [r4, #0]
 800117a:	bd38      	pop	{r3, r4, r5, pc}
 800117c:	200001c0 	.word	0x200001c0

08001180 <_lseek_r>:
 8001180:	b538      	push	{r3, r4, r5, lr}
 8001182:	4d07      	ldr	r5, [pc, #28]	@ (80011a0 <_lseek_r+0x20>)
 8001184:	4604      	mov	r4, r0
 8001186:	4608      	mov	r0, r1
 8001188:	4611      	mov	r1, r2
 800118a:	2200      	movs	r2, #0
 800118c:	602a      	str	r2, [r5, #0]
 800118e:	461a      	mov	r2, r3
 8001190:	f7ff fdc2 	bl	8000d18 <_lseek>
 8001194:	1c43      	adds	r3, r0, #1
 8001196:	d102      	bne.n	800119e <_lseek_r+0x1e>
 8001198:	682b      	ldr	r3, [r5, #0]
 800119a:	b103      	cbz	r3, 800119e <_lseek_r+0x1e>
 800119c:	6023      	str	r3, [r4, #0]
 800119e:	bd38      	pop	{r3, r4, r5, pc}
 80011a0:	200001c0 	.word	0x200001c0

080011a4 <_read_r>:
 80011a4:	b538      	push	{r3, r4, r5, lr}
 80011a6:	4d07      	ldr	r5, [pc, #28]	@ (80011c4 <_read_r+0x20>)
 80011a8:	4604      	mov	r4, r0
 80011aa:	4608      	mov	r0, r1
 80011ac:	4611      	mov	r1, r2
 80011ae:	2200      	movs	r2, #0
 80011b0:	602a      	str	r2, [r5, #0]
 80011b2:	461a      	mov	r2, r3
 80011b4:	f7ff fd50 	bl	8000c58 <_read>
 80011b8:	1c43      	adds	r3, r0, #1
 80011ba:	d102      	bne.n	80011c2 <_read_r+0x1e>
 80011bc:	682b      	ldr	r3, [r5, #0]
 80011be:	b103      	cbz	r3, 80011c2 <_read_r+0x1e>
 80011c0:	6023      	str	r3, [r4, #0]
 80011c2:	bd38      	pop	{r3, r4, r5, pc}
 80011c4:	200001c0 	.word	0x200001c0

080011c8 <_write_r>:
 80011c8:	b538      	push	{r3, r4, r5, lr}
 80011ca:	4d07      	ldr	r5, [pc, #28]	@ (80011e8 <_write_r+0x20>)
 80011cc:	4604      	mov	r4, r0
 80011ce:	4608      	mov	r0, r1
 80011d0:	4611      	mov	r1, r2
 80011d2:	2200      	movs	r2, #0
 80011d4:	602a      	str	r2, [r5, #0]
 80011d6:	461a      	mov	r2, r3
 80011d8:	f7ff fd5b 	bl	8000c92 <_write>
 80011dc:	1c43      	adds	r3, r0, #1
 80011de:	d102      	bne.n	80011e6 <_write_r+0x1e>
 80011e0:	682b      	ldr	r3, [r5, #0]
 80011e2:	b103      	cbz	r3, 80011e6 <_write_r+0x1e>
 80011e4:	6023      	str	r3, [r4, #0]
 80011e6:	bd38      	pop	{r3, r4, r5, pc}
 80011e8:	200001c0 	.word	0x200001c0

080011ec <__errno>:
 80011ec:	4b01      	ldr	r3, [pc, #4]	@ (80011f4 <__errno+0x8>)
 80011ee:	6818      	ldr	r0, [r3, #0]
 80011f0:	4770      	bx	lr
 80011f2:	bf00      	nop
 80011f4:	2000000c 	.word	0x2000000c

080011f8 <__libc_init_array>:
 80011f8:	b570      	push	{r4, r5, r6, lr}
 80011fa:	4d0d      	ldr	r5, [pc, #52]	@ (8001230 <__libc_init_array+0x38>)
 80011fc:	4c0d      	ldr	r4, [pc, #52]	@ (8001234 <__libc_init_array+0x3c>)
 80011fe:	1b64      	subs	r4, r4, r5
 8001200:	10a4      	asrs	r4, r4, #2
 8001202:	2600      	movs	r6, #0
 8001204:	42a6      	cmp	r6, r4
 8001206:	d109      	bne.n	800121c <__libc_init_array+0x24>
 8001208:	4d0b      	ldr	r5, [pc, #44]	@ (8001238 <__libc_init_array+0x40>)
 800120a:	4c0c      	ldr	r4, [pc, #48]	@ (800123c <__libc_init_array+0x44>)
 800120c:	f000 fdb6 	bl	8001d7c <_init>
 8001210:	1b64      	subs	r4, r4, r5
 8001212:	10a4      	asrs	r4, r4, #2
 8001214:	2600      	movs	r6, #0
 8001216:	42a6      	cmp	r6, r4
 8001218:	d105      	bne.n	8001226 <__libc_init_array+0x2e>
 800121a:	bd70      	pop	{r4, r5, r6, pc}
 800121c:	f855 3b04 	ldr.w	r3, [r5], #4
 8001220:	4798      	blx	r3
 8001222:	3601      	adds	r6, #1
 8001224:	e7ee      	b.n	8001204 <__libc_init_array+0xc>
 8001226:	f855 3b04 	ldr.w	r3, [r5], #4
 800122a:	4798      	blx	r3
 800122c:	3601      	adds	r6, #1
 800122e:	e7f2      	b.n	8001216 <__libc_init_array+0x1e>
 8001230:	08001de8 	.word	0x08001de8
 8001234:	08001de8 	.word	0x08001de8
 8001238:	08001de8 	.word	0x08001de8
 800123c:	08001dec 	.word	0x08001dec

08001240 <__retarget_lock_init_recursive>:
 8001240:	4770      	bx	lr

08001242 <__retarget_lock_acquire_recursive>:
 8001242:	4770      	bx	lr

08001244 <__retarget_lock_release_recursive>:
 8001244:	4770      	bx	lr
	...

08001248 <_free_r>:
 8001248:	b538      	push	{r3, r4, r5, lr}
 800124a:	4605      	mov	r5, r0
 800124c:	2900      	cmp	r1, #0
 800124e:	d041      	beq.n	80012d4 <_free_r+0x8c>
 8001250:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001254:	1f0c      	subs	r4, r1, #4
 8001256:	2b00      	cmp	r3, #0
 8001258:	bfb8      	it	lt
 800125a:	18e4      	addlt	r4, r4, r3
 800125c:	f000 f8e0 	bl	8001420 <__malloc_lock>
 8001260:	4a1d      	ldr	r2, [pc, #116]	@ (80012d8 <_free_r+0x90>)
 8001262:	6813      	ldr	r3, [r2, #0]
 8001264:	b933      	cbnz	r3, 8001274 <_free_r+0x2c>
 8001266:	6063      	str	r3, [r4, #4]
 8001268:	6014      	str	r4, [r2, #0]
 800126a:	4628      	mov	r0, r5
 800126c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001270:	f000 b8dc 	b.w	800142c <__malloc_unlock>
 8001274:	42a3      	cmp	r3, r4
 8001276:	d908      	bls.n	800128a <_free_r+0x42>
 8001278:	6820      	ldr	r0, [r4, #0]
 800127a:	1821      	adds	r1, r4, r0
 800127c:	428b      	cmp	r3, r1
 800127e:	bf01      	itttt	eq
 8001280:	6819      	ldreq	r1, [r3, #0]
 8001282:	685b      	ldreq	r3, [r3, #4]
 8001284:	1809      	addeq	r1, r1, r0
 8001286:	6021      	streq	r1, [r4, #0]
 8001288:	e7ed      	b.n	8001266 <_free_r+0x1e>
 800128a:	461a      	mov	r2, r3
 800128c:	685b      	ldr	r3, [r3, #4]
 800128e:	b10b      	cbz	r3, 8001294 <_free_r+0x4c>
 8001290:	42a3      	cmp	r3, r4
 8001292:	d9fa      	bls.n	800128a <_free_r+0x42>
 8001294:	6811      	ldr	r1, [r2, #0]
 8001296:	1850      	adds	r0, r2, r1
 8001298:	42a0      	cmp	r0, r4
 800129a:	d10b      	bne.n	80012b4 <_free_r+0x6c>
 800129c:	6820      	ldr	r0, [r4, #0]
 800129e:	4401      	add	r1, r0
 80012a0:	1850      	adds	r0, r2, r1
 80012a2:	4283      	cmp	r3, r0
 80012a4:	6011      	str	r1, [r2, #0]
 80012a6:	d1e0      	bne.n	800126a <_free_r+0x22>
 80012a8:	6818      	ldr	r0, [r3, #0]
 80012aa:	685b      	ldr	r3, [r3, #4]
 80012ac:	6053      	str	r3, [r2, #4]
 80012ae:	4408      	add	r0, r1
 80012b0:	6010      	str	r0, [r2, #0]
 80012b2:	e7da      	b.n	800126a <_free_r+0x22>
 80012b4:	d902      	bls.n	80012bc <_free_r+0x74>
 80012b6:	230c      	movs	r3, #12
 80012b8:	602b      	str	r3, [r5, #0]
 80012ba:	e7d6      	b.n	800126a <_free_r+0x22>
 80012bc:	6820      	ldr	r0, [r4, #0]
 80012be:	1821      	adds	r1, r4, r0
 80012c0:	428b      	cmp	r3, r1
 80012c2:	bf04      	itt	eq
 80012c4:	6819      	ldreq	r1, [r3, #0]
 80012c6:	685b      	ldreq	r3, [r3, #4]
 80012c8:	6063      	str	r3, [r4, #4]
 80012ca:	bf04      	itt	eq
 80012cc:	1809      	addeq	r1, r1, r0
 80012ce:	6021      	streq	r1, [r4, #0]
 80012d0:	6054      	str	r4, [r2, #4]
 80012d2:	e7ca      	b.n	800126a <_free_r+0x22>
 80012d4:	bd38      	pop	{r3, r4, r5, pc}
 80012d6:	bf00      	nop
 80012d8:	200001cc 	.word	0x200001cc

080012dc <sbrk_aligned>:
 80012dc:	b570      	push	{r4, r5, r6, lr}
 80012de:	4e0f      	ldr	r6, [pc, #60]	@ (800131c <sbrk_aligned+0x40>)
 80012e0:	460c      	mov	r4, r1
 80012e2:	6831      	ldr	r1, [r6, #0]
 80012e4:	4605      	mov	r5, r0
 80012e6:	b911      	cbnz	r1, 80012ee <sbrk_aligned+0x12>
 80012e8:	f000 fcb4 	bl	8001c54 <_sbrk_r>
 80012ec:	6030      	str	r0, [r6, #0]
 80012ee:	4621      	mov	r1, r4
 80012f0:	4628      	mov	r0, r5
 80012f2:	f000 fcaf 	bl	8001c54 <_sbrk_r>
 80012f6:	1c43      	adds	r3, r0, #1
 80012f8:	d103      	bne.n	8001302 <sbrk_aligned+0x26>
 80012fa:	f04f 34ff 	mov.w	r4, #4294967295
 80012fe:	4620      	mov	r0, r4
 8001300:	bd70      	pop	{r4, r5, r6, pc}
 8001302:	1cc4      	adds	r4, r0, #3
 8001304:	f024 0403 	bic.w	r4, r4, #3
 8001308:	42a0      	cmp	r0, r4
 800130a:	d0f8      	beq.n	80012fe <sbrk_aligned+0x22>
 800130c:	1a21      	subs	r1, r4, r0
 800130e:	4628      	mov	r0, r5
 8001310:	f000 fca0 	bl	8001c54 <_sbrk_r>
 8001314:	3001      	adds	r0, #1
 8001316:	d1f2      	bne.n	80012fe <sbrk_aligned+0x22>
 8001318:	e7ef      	b.n	80012fa <sbrk_aligned+0x1e>
 800131a:	bf00      	nop
 800131c:	200001c8 	.word	0x200001c8

08001320 <_malloc_r>:
 8001320:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001324:	1ccd      	adds	r5, r1, #3
 8001326:	f025 0503 	bic.w	r5, r5, #3
 800132a:	3508      	adds	r5, #8
 800132c:	2d0c      	cmp	r5, #12
 800132e:	bf38      	it	cc
 8001330:	250c      	movcc	r5, #12
 8001332:	2d00      	cmp	r5, #0
 8001334:	4606      	mov	r6, r0
 8001336:	db01      	blt.n	800133c <_malloc_r+0x1c>
 8001338:	42a9      	cmp	r1, r5
 800133a:	d904      	bls.n	8001346 <_malloc_r+0x26>
 800133c:	230c      	movs	r3, #12
 800133e:	6033      	str	r3, [r6, #0]
 8001340:	2000      	movs	r0, #0
 8001342:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001346:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800141c <_malloc_r+0xfc>
 800134a:	f000 f869 	bl	8001420 <__malloc_lock>
 800134e:	f8d8 3000 	ldr.w	r3, [r8]
 8001352:	461c      	mov	r4, r3
 8001354:	bb44      	cbnz	r4, 80013a8 <_malloc_r+0x88>
 8001356:	4629      	mov	r1, r5
 8001358:	4630      	mov	r0, r6
 800135a:	f7ff ffbf 	bl	80012dc <sbrk_aligned>
 800135e:	1c43      	adds	r3, r0, #1
 8001360:	4604      	mov	r4, r0
 8001362:	d158      	bne.n	8001416 <_malloc_r+0xf6>
 8001364:	f8d8 4000 	ldr.w	r4, [r8]
 8001368:	4627      	mov	r7, r4
 800136a:	2f00      	cmp	r7, #0
 800136c:	d143      	bne.n	80013f6 <_malloc_r+0xd6>
 800136e:	2c00      	cmp	r4, #0
 8001370:	d04b      	beq.n	800140a <_malloc_r+0xea>
 8001372:	6823      	ldr	r3, [r4, #0]
 8001374:	4639      	mov	r1, r7
 8001376:	4630      	mov	r0, r6
 8001378:	eb04 0903 	add.w	r9, r4, r3
 800137c:	f000 fc6a 	bl	8001c54 <_sbrk_r>
 8001380:	4581      	cmp	r9, r0
 8001382:	d142      	bne.n	800140a <_malloc_r+0xea>
 8001384:	6821      	ldr	r1, [r4, #0]
 8001386:	1a6d      	subs	r5, r5, r1
 8001388:	4629      	mov	r1, r5
 800138a:	4630      	mov	r0, r6
 800138c:	f7ff ffa6 	bl	80012dc <sbrk_aligned>
 8001390:	3001      	adds	r0, #1
 8001392:	d03a      	beq.n	800140a <_malloc_r+0xea>
 8001394:	6823      	ldr	r3, [r4, #0]
 8001396:	442b      	add	r3, r5
 8001398:	6023      	str	r3, [r4, #0]
 800139a:	f8d8 3000 	ldr.w	r3, [r8]
 800139e:	685a      	ldr	r2, [r3, #4]
 80013a0:	bb62      	cbnz	r2, 80013fc <_malloc_r+0xdc>
 80013a2:	f8c8 7000 	str.w	r7, [r8]
 80013a6:	e00f      	b.n	80013c8 <_malloc_r+0xa8>
 80013a8:	6822      	ldr	r2, [r4, #0]
 80013aa:	1b52      	subs	r2, r2, r5
 80013ac:	d420      	bmi.n	80013f0 <_malloc_r+0xd0>
 80013ae:	2a0b      	cmp	r2, #11
 80013b0:	d917      	bls.n	80013e2 <_malloc_r+0xc2>
 80013b2:	1961      	adds	r1, r4, r5
 80013b4:	42a3      	cmp	r3, r4
 80013b6:	6025      	str	r5, [r4, #0]
 80013b8:	bf18      	it	ne
 80013ba:	6059      	strne	r1, [r3, #4]
 80013bc:	6863      	ldr	r3, [r4, #4]
 80013be:	bf08      	it	eq
 80013c0:	f8c8 1000 	streq.w	r1, [r8]
 80013c4:	5162      	str	r2, [r4, r5]
 80013c6:	604b      	str	r3, [r1, #4]
 80013c8:	4630      	mov	r0, r6
 80013ca:	f000 f82f 	bl	800142c <__malloc_unlock>
 80013ce:	f104 000b 	add.w	r0, r4, #11
 80013d2:	1d23      	adds	r3, r4, #4
 80013d4:	f020 0007 	bic.w	r0, r0, #7
 80013d8:	1ac2      	subs	r2, r0, r3
 80013da:	bf1c      	itt	ne
 80013dc:	1a1b      	subne	r3, r3, r0
 80013de:	50a3      	strne	r3, [r4, r2]
 80013e0:	e7af      	b.n	8001342 <_malloc_r+0x22>
 80013e2:	6862      	ldr	r2, [r4, #4]
 80013e4:	42a3      	cmp	r3, r4
 80013e6:	bf0c      	ite	eq
 80013e8:	f8c8 2000 	streq.w	r2, [r8]
 80013ec:	605a      	strne	r2, [r3, #4]
 80013ee:	e7eb      	b.n	80013c8 <_malloc_r+0xa8>
 80013f0:	4623      	mov	r3, r4
 80013f2:	6864      	ldr	r4, [r4, #4]
 80013f4:	e7ae      	b.n	8001354 <_malloc_r+0x34>
 80013f6:	463c      	mov	r4, r7
 80013f8:	687f      	ldr	r7, [r7, #4]
 80013fa:	e7b6      	b.n	800136a <_malloc_r+0x4a>
 80013fc:	461a      	mov	r2, r3
 80013fe:	685b      	ldr	r3, [r3, #4]
 8001400:	42a3      	cmp	r3, r4
 8001402:	d1fb      	bne.n	80013fc <_malloc_r+0xdc>
 8001404:	2300      	movs	r3, #0
 8001406:	6053      	str	r3, [r2, #4]
 8001408:	e7de      	b.n	80013c8 <_malloc_r+0xa8>
 800140a:	230c      	movs	r3, #12
 800140c:	6033      	str	r3, [r6, #0]
 800140e:	4630      	mov	r0, r6
 8001410:	f000 f80c 	bl	800142c <__malloc_unlock>
 8001414:	e794      	b.n	8001340 <_malloc_r+0x20>
 8001416:	6005      	str	r5, [r0, #0]
 8001418:	e7d6      	b.n	80013c8 <_malloc_r+0xa8>
 800141a:	bf00      	nop
 800141c:	200001cc 	.word	0x200001cc

08001420 <__malloc_lock>:
 8001420:	4801      	ldr	r0, [pc, #4]	@ (8001428 <__malloc_lock+0x8>)
 8001422:	f7ff bf0e 	b.w	8001242 <__retarget_lock_acquire_recursive>
 8001426:	bf00      	nop
 8001428:	200001c4 	.word	0x200001c4

0800142c <__malloc_unlock>:
 800142c:	4801      	ldr	r0, [pc, #4]	@ (8001434 <__malloc_unlock+0x8>)
 800142e:	f7ff bf09 	b.w	8001244 <__retarget_lock_release_recursive>
 8001432:	bf00      	nop
 8001434:	200001c4 	.word	0x200001c4

08001438 <__sfputc_r>:
 8001438:	6893      	ldr	r3, [r2, #8]
 800143a:	3b01      	subs	r3, #1
 800143c:	2b00      	cmp	r3, #0
 800143e:	b410      	push	{r4}
 8001440:	6093      	str	r3, [r2, #8]
 8001442:	da08      	bge.n	8001456 <__sfputc_r+0x1e>
 8001444:	6994      	ldr	r4, [r2, #24]
 8001446:	42a3      	cmp	r3, r4
 8001448:	db01      	blt.n	800144e <__sfputc_r+0x16>
 800144a:	290a      	cmp	r1, #10
 800144c:	d103      	bne.n	8001456 <__sfputc_r+0x1e>
 800144e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001452:	f000 bb6b 	b.w	8001b2c <__swbuf_r>
 8001456:	6813      	ldr	r3, [r2, #0]
 8001458:	1c58      	adds	r0, r3, #1
 800145a:	6010      	str	r0, [r2, #0]
 800145c:	7019      	strb	r1, [r3, #0]
 800145e:	4608      	mov	r0, r1
 8001460:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001464:	4770      	bx	lr

08001466 <__sfputs_r>:
 8001466:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001468:	4606      	mov	r6, r0
 800146a:	460f      	mov	r7, r1
 800146c:	4614      	mov	r4, r2
 800146e:	18d5      	adds	r5, r2, r3
 8001470:	42ac      	cmp	r4, r5
 8001472:	d101      	bne.n	8001478 <__sfputs_r+0x12>
 8001474:	2000      	movs	r0, #0
 8001476:	e007      	b.n	8001488 <__sfputs_r+0x22>
 8001478:	f814 1b01 	ldrb.w	r1, [r4], #1
 800147c:	463a      	mov	r2, r7
 800147e:	4630      	mov	r0, r6
 8001480:	f7ff ffda 	bl	8001438 <__sfputc_r>
 8001484:	1c43      	adds	r3, r0, #1
 8001486:	d1f3      	bne.n	8001470 <__sfputs_r+0xa>
 8001488:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800148c <_vfiprintf_r>:
 800148c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001490:	460d      	mov	r5, r1
 8001492:	b09d      	sub	sp, #116	@ 0x74
 8001494:	4614      	mov	r4, r2
 8001496:	4698      	mov	r8, r3
 8001498:	4606      	mov	r6, r0
 800149a:	b118      	cbz	r0, 80014a4 <_vfiprintf_r+0x18>
 800149c:	6a03      	ldr	r3, [r0, #32]
 800149e:	b90b      	cbnz	r3, 80014a4 <_vfiprintf_r+0x18>
 80014a0:	f7ff fdca 	bl	8001038 <__sinit>
 80014a4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80014a6:	07d9      	lsls	r1, r3, #31
 80014a8:	d405      	bmi.n	80014b6 <_vfiprintf_r+0x2a>
 80014aa:	89ab      	ldrh	r3, [r5, #12]
 80014ac:	059a      	lsls	r2, r3, #22
 80014ae:	d402      	bmi.n	80014b6 <_vfiprintf_r+0x2a>
 80014b0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80014b2:	f7ff fec6 	bl	8001242 <__retarget_lock_acquire_recursive>
 80014b6:	89ab      	ldrh	r3, [r5, #12]
 80014b8:	071b      	lsls	r3, r3, #28
 80014ba:	d501      	bpl.n	80014c0 <_vfiprintf_r+0x34>
 80014bc:	692b      	ldr	r3, [r5, #16]
 80014be:	b99b      	cbnz	r3, 80014e8 <_vfiprintf_r+0x5c>
 80014c0:	4629      	mov	r1, r5
 80014c2:	4630      	mov	r0, r6
 80014c4:	f000 fb70 	bl	8001ba8 <__swsetup_r>
 80014c8:	b170      	cbz	r0, 80014e8 <_vfiprintf_r+0x5c>
 80014ca:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80014cc:	07dc      	lsls	r4, r3, #31
 80014ce:	d504      	bpl.n	80014da <_vfiprintf_r+0x4e>
 80014d0:	f04f 30ff 	mov.w	r0, #4294967295
 80014d4:	b01d      	add	sp, #116	@ 0x74
 80014d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80014da:	89ab      	ldrh	r3, [r5, #12]
 80014dc:	0598      	lsls	r0, r3, #22
 80014de:	d4f7      	bmi.n	80014d0 <_vfiprintf_r+0x44>
 80014e0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80014e2:	f7ff feaf 	bl	8001244 <__retarget_lock_release_recursive>
 80014e6:	e7f3      	b.n	80014d0 <_vfiprintf_r+0x44>
 80014e8:	2300      	movs	r3, #0
 80014ea:	9309      	str	r3, [sp, #36]	@ 0x24
 80014ec:	2320      	movs	r3, #32
 80014ee:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80014f2:	f8cd 800c 	str.w	r8, [sp, #12]
 80014f6:	2330      	movs	r3, #48	@ 0x30
 80014f8:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80016a8 <_vfiprintf_r+0x21c>
 80014fc:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8001500:	f04f 0901 	mov.w	r9, #1
 8001504:	4623      	mov	r3, r4
 8001506:	469a      	mov	sl, r3
 8001508:	f813 2b01 	ldrb.w	r2, [r3], #1
 800150c:	b10a      	cbz	r2, 8001512 <_vfiprintf_r+0x86>
 800150e:	2a25      	cmp	r2, #37	@ 0x25
 8001510:	d1f9      	bne.n	8001506 <_vfiprintf_r+0x7a>
 8001512:	ebba 0b04 	subs.w	fp, sl, r4
 8001516:	d00b      	beq.n	8001530 <_vfiprintf_r+0xa4>
 8001518:	465b      	mov	r3, fp
 800151a:	4622      	mov	r2, r4
 800151c:	4629      	mov	r1, r5
 800151e:	4630      	mov	r0, r6
 8001520:	f7ff ffa1 	bl	8001466 <__sfputs_r>
 8001524:	3001      	adds	r0, #1
 8001526:	f000 80a7 	beq.w	8001678 <_vfiprintf_r+0x1ec>
 800152a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800152c:	445a      	add	r2, fp
 800152e:	9209      	str	r2, [sp, #36]	@ 0x24
 8001530:	f89a 3000 	ldrb.w	r3, [sl]
 8001534:	2b00      	cmp	r3, #0
 8001536:	f000 809f 	beq.w	8001678 <_vfiprintf_r+0x1ec>
 800153a:	2300      	movs	r3, #0
 800153c:	f04f 32ff 	mov.w	r2, #4294967295
 8001540:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8001544:	f10a 0a01 	add.w	sl, sl, #1
 8001548:	9304      	str	r3, [sp, #16]
 800154a:	9307      	str	r3, [sp, #28]
 800154c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8001550:	931a      	str	r3, [sp, #104]	@ 0x68
 8001552:	4654      	mov	r4, sl
 8001554:	2205      	movs	r2, #5
 8001556:	f814 1b01 	ldrb.w	r1, [r4], #1
 800155a:	4853      	ldr	r0, [pc, #332]	@ (80016a8 <_vfiprintf_r+0x21c>)
 800155c:	f7fe fe58 	bl	8000210 <memchr>
 8001560:	9a04      	ldr	r2, [sp, #16]
 8001562:	b9d8      	cbnz	r0, 800159c <_vfiprintf_r+0x110>
 8001564:	06d1      	lsls	r1, r2, #27
 8001566:	bf44      	itt	mi
 8001568:	2320      	movmi	r3, #32
 800156a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800156e:	0713      	lsls	r3, r2, #28
 8001570:	bf44      	itt	mi
 8001572:	232b      	movmi	r3, #43	@ 0x2b
 8001574:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8001578:	f89a 3000 	ldrb.w	r3, [sl]
 800157c:	2b2a      	cmp	r3, #42	@ 0x2a
 800157e:	d015      	beq.n	80015ac <_vfiprintf_r+0x120>
 8001580:	9a07      	ldr	r2, [sp, #28]
 8001582:	4654      	mov	r4, sl
 8001584:	2000      	movs	r0, #0
 8001586:	f04f 0c0a 	mov.w	ip, #10
 800158a:	4621      	mov	r1, r4
 800158c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8001590:	3b30      	subs	r3, #48	@ 0x30
 8001592:	2b09      	cmp	r3, #9
 8001594:	d94b      	bls.n	800162e <_vfiprintf_r+0x1a2>
 8001596:	b1b0      	cbz	r0, 80015c6 <_vfiprintf_r+0x13a>
 8001598:	9207      	str	r2, [sp, #28]
 800159a:	e014      	b.n	80015c6 <_vfiprintf_r+0x13a>
 800159c:	eba0 0308 	sub.w	r3, r0, r8
 80015a0:	fa09 f303 	lsl.w	r3, r9, r3
 80015a4:	4313      	orrs	r3, r2
 80015a6:	9304      	str	r3, [sp, #16]
 80015a8:	46a2      	mov	sl, r4
 80015aa:	e7d2      	b.n	8001552 <_vfiprintf_r+0xc6>
 80015ac:	9b03      	ldr	r3, [sp, #12]
 80015ae:	1d19      	adds	r1, r3, #4
 80015b0:	681b      	ldr	r3, [r3, #0]
 80015b2:	9103      	str	r1, [sp, #12]
 80015b4:	2b00      	cmp	r3, #0
 80015b6:	bfbb      	ittet	lt
 80015b8:	425b      	neglt	r3, r3
 80015ba:	f042 0202 	orrlt.w	r2, r2, #2
 80015be:	9307      	strge	r3, [sp, #28]
 80015c0:	9307      	strlt	r3, [sp, #28]
 80015c2:	bfb8      	it	lt
 80015c4:	9204      	strlt	r2, [sp, #16]
 80015c6:	7823      	ldrb	r3, [r4, #0]
 80015c8:	2b2e      	cmp	r3, #46	@ 0x2e
 80015ca:	d10a      	bne.n	80015e2 <_vfiprintf_r+0x156>
 80015cc:	7863      	ldrb	r3, [r4, #1]
 80015ce:	2b2a      	cmp	r3, #42	@ 0x2a
 80015d0:	d132      	bne.n	8001638 <_vfiprintf_r+0x1ac>
 80015d2:	9b03      	ldr	r3, [sp, #12]
 80015d4:	1d1a      	adds	r2, r3, #4
 80015d6:	681b      	ldr	r3, [r3, #0]
 80015d8:	9203      	str	r2, [sp, #12]
 80015da:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80015de:	3402      	adds	r4, #2
 80015e0:	9305      	str	r3, [sp, #20]
 80015e2:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80016b8 <_vfiprintf_r+0x22c>
 80015e6:	7821      	ldrb	r1, [r4, #0]
 80015e8:	2203      	movs	r2, #3
 80015ea:	4650      	mov	r0, sl
 80015ec:	f7fe fe10 	bl	8000210 <memchr>
 80015f0:	b138      	cbz	r0, 8001602 <_vfiprintf_r+0x176>
 80015f2:	9b04      	ldr	r3, [sp, #16]
 80015f4:	eba0 000a 	sub.w	r0, r0, sl
 80015f8:	2240      	movs	r2, #64	@ 0x40
 80015fa:	4082      	lsls	r2, r0
 80015fc:	4313      	orrs	r3, r2
 80015fe:	3401      	adds	r4, #1
 8001600:	9304      	str	r3, [sp, #16]
 8001602:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001606:	4829      	ldr	r0, [pc, #164]	@ (80016ac <_vfiprintf_r+0x220>)
 8001608:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800160c:	2206      	movs	r2, #6
 800160e:	f7fe fdff 	bl	8000210 <memchr>
 8001612:	2800      	cmp	r0, #0
 8001614:	d03f      	beq.n	8001696 <_vfiprintf_r+0x20a>
 8001616:	4b26      	ldr	r3, [pc, #152]	@ (80016b0 <_vfiprintf_r+0x224>)
 8001618:	bb1b      	cbnz	r3, 8001662 <_vfiprintf_r+0x1d6>
 800161a:	9b03      	ldr	r3, [sp, #12]
 800161c:	3307      	adds	r3, #7
 800161e:	f023 0307 	bic.w	r3, r3, #7
 8001622:	3308      	adds	r3, #8
 8001624:	9303      	str	r3, [sp, #12]
 8001626:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001628:	443b      	add	r3, r7
 800162a:	9309      	str	r3, [sp, #36]	@ 0x24
 800162c:	e76a      	b.n	8001504 <_vfiprintf_r+0x78>
 800162e:	fb0c 3202 	mla	r2, ip, r2, r3
 8001632:	460c      	mov	r4, r1
 8001634:	2001      	movs	r0, #1
 8001636:	e7a8      	b.n	800158a <_vfiprintf_r+0xfe>
 8001638:	2300      	movs	r3, #0
 800163a:	3401      	adds	r4, #1
 800163c:	9305      	str	r3, [sp, #20]
 800163e:	4619      	mov	r1, r3
 8001640:	f04f 0c0a 	mov.w	ip, #10
 8001644:	4620      	mov	r0, r4
 8001646:	f810 2b01 	ldrb.w	r2, [r0], #1
 800164a:	3a30      	subs	r2, #48	@ 0x30
 800164c:	2a09      	cmp	r2, #9
 800164e:	d903      	bls.n	8001658 <_vfiprintf_r+0x1cc>
 8001650:	2b00      	cmp	r3, #0
 8001652:	d0c6      	beq.n	80015e2 <_vfiprintf_r+0x156>
 8001654:	9105      	str	r1, [sp, #20]
 8001656:	e7c4      	b.n	80015e2 <_vfiprintf_r+0x156>
 8001658:	fb0c 2101 	mla	r1, ip, r1, r2
 800165c:	4604      	mov	r4, r0
 800165e:	2301      	movs	r3, #1
 8001660:	e7f0      	b.n	8001644 <_vfiprintf_r+0x1b8>
 8001662:	ab03      	add	r3, sp, #12
 8001664:	9300      	str	r3, [sp, #0]
 8001666:	462a      	mov	r2, r5
 8001668:	4b12      	ldr	r3, [pc, #72]	@ (80016b4 <_vfiprintf_r+0x228>)
 800166a:	a904      	add	r1, sp, #16
 800166c:	4630      	mov	r0, r6
 800166e:	f3af 8000 	nop.w
 8001672:	4607      	mov	r7, r0
 8001674:	1c78      	adds	r0, r7, #1
 8001676:	d1d6      	bne.n	8001626 <_vfiprintf_r+0x19a>
 8001678:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800167a:	07d9      	lsls	r1, r3, #31
 800167c:	d405      	bmi.n	800168a <_vfiprintf_r+0x1fe>
 800167e:	89ab      	ldrh	r3, [r5, #12]
 8001680:	059a      	lsls	r2, r3, #22
 8001682:	d402      	bmi.n	800168a <_vfiprintf_r+0x1fe>
 8001684:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8001686:	f7ff fddd 	bl	8001244 <__retarget_lock_release_recursive>
 800168a:	89ab      	ldrh	r3, [r5, #12]
 800168c:	065b      	lsls	r3, r3, #25
 800168e:	f53f af1f 	bmi.w	80014d0 <_vfiprintf_r+0x44>
 8001692:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8001694:	e71e      	b.n	80014d4 <_vfiprintf_r+0x48>
 8001696:	ab03      	add	r3, sp, #12
 8001698:	9300      	str	r3, [sp, #0]
 800169a:	462a      	mov	r2, r5
 800169c:	4b05      	ldr	r3, [pc, #20]	@ (80016b4 <_vfiprintf_r+0x228>)
 800169e:	a904      	add	r1, sp, #16
 80016a0:	4630      	mov	r0, r6
 80016a2:	f000 f879 	bl	8001798 <_printf_i>
 80016a6:	e7e4      	b.n	8001672 <_vfiprintf_r+0x1e6>
 80016a8:	08001dac 	.word	0x08001dac
 80016ac:	08001db6 	.word	0x08001db6
 80016b0:	00000000 	.word	0x00000000
 80016b4:	08001467 	.word	0x08001467
 80016b8:	08001db2 	.word	0x08001db2

080016bc <_printf_common>:
 80016bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80016c0:	4616      	mov	r6, r2
 80016c2:	4698      	mov	r8, r3
 80016c4:	688a      	ldr	r2, [r1, #8]
 80016c6:	690b      	ldr	r3, [r1, #16]
 80016c8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80016cc:	4293      	cmp	r3, r2
 80016ce:	bfb8      	it	lt
 80016d0:	4613      	movlt	r3, r2
 80016d2:	6033      	str	r3, [r6, #0]
 80016d4:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80016d8:	4607      	mov	r7, r0
 80016da:	460c      	mov	r4, r1
 80016dc:	b10a      	cbz	r2, 80016e2 <_printf_common+0x26>
 80016de:	3301      	adds	r3, #1
 80016e0:	6033      	str	r3, [r6, #0]
 80016e2:	6823      	ldr	r3, [r4, #0]
 80016e4:	0699      	lsls	r1, r3, #26
 80016e6:	bf42      	ittt	mi
 80016e8:	6833      	ldrmi	r3, [r6, #0]
 80016ea:	3302      	addmi	r3, #2
 80016ec:	6033      	strmi	r3, [r6, #0]
 80016ee:	6825      	ldr	r5, [r4, #0]
 80016f0:	f015 0506 	ands.w	r5, r5, #6
 80016f4:	d106      	bne.n	8001704 <_printf_common+0x48>
 80016f6:	f104 0a19 	add.w	sl, r4, #25
 80016fa:	68e3      	ldr	r3, [r4, #12]
 80016fc:	6832      	ldr	r2, [r6, #0]
 80016fe:	1a9b      	subs	r3, r3, r2
 8001700:	42ab      	cmp	r3, r5
 8001702:	dc26      	bgt.n	8001752 <_printf_common+0x96>
 8001704:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8001708:	6822      	ldr	r2, [r4, #0]
 800170a:	3b00      	subs	r3, #0
 800170c:	bf18      	it	ne
 800170e:	2301      	movne	r3, #1
 8001710:	0692      	lsls	r2, r2, #26
 8001712:	d42b      	bmi.n	800176c <_printf_common+0xb0>
 8001714:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8001718:	4641      	mov	r1, r8
 800171a:	4638      	mov	r0, r7
 800171c:	47c8      	blx	r9
 800171e:	3001      	adds	r0, #1
 8001720:	d01e      	beq.n	8001760 <_printf_common+0xa4>
 8001722:	6823      	ldr	r3, [r4, #0]
 8001724:	6922      	ldr	r2, [r4, #16]
 8001726:	f003 0306 	and.w	r3, r3, #6
 800172a:	2b04      	cmp	r3, #4
 800172c:	bf02      	ittt	eq
 800172e:	68e5      	ldreq	r5, [r4, #12]
 8001730:	6833      	ldreq	r3, [r6, #0]
 8001732:	1aed      	subeq	r5, r5, r3
 8001734:	68a3      	ldr	r3, [r4, #8]
 8001736:	bf0c      	ite	eq
 8001738:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800173c:	2500      	movne	r5, #0
 800173e:	4293      	cmp	r3, r2
 8001740:	bfc4      	itt	gt
 8001742:	1a9b      	subgt	r3, r3, r2
 8001744:	18ed      	addgt	r5, r5, r3
 8001746:	2600      	movs	r6, #0
 8001748:	341a      	adds	r4, #26
 800174a:	42b5      	cmp	r5, r6
 800174c:	d11a      	bne.n	8001784 <_printf_common+0xc8>
 800174e:	2000      	movs	r0, #0
 8001750:	e008      	b.n	8001764 <_printf_common+0xa8>
 8001752:	2301      	movs	r3, #1
 8001754:	4652      	mov	r2, sl
 8001756:	4641      	mov	r1, r8
 8001758:	4638      	mov	r0, r7
 800175a:	47c8      	blx	r9
 800175c:	3001      	adds	r0, #1
 800175e:	d103      	bne.n	8001768 <_printf_common+0xac>
 8001760:	f04f 30ff 	mov.w	r0, #4294967295
 8001764:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001768:	3501      	adds	r5, #1
 800176a:	e7c6      	b.n	80016fa <_printf_common+0x3e>
 800176c:	18e1      	adds	r1, r4, r3
 800176e:	1c5a      	adds	r2, r3, #1
 8001770:	2030      	movs	r0, #48	@ 0x30
 8001772:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8001776:	4422      	add	r2, r4
 8001778:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800177c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8001780:	3302      	adds	r3, #2
 8001782:	e7c7      	b.n	8001714 <_printf_common+0x58>
 8001784:	2301      	movs	r3, #1
 8001786:	4622      	mov	r2, r4
 8001788:	4641      	mov	r1, r8
 800178a:	4638      	mov	r0, r7
 800178c:	47c8      	blx	r9
 800178e:	3001      	adds	r0, #1
 8001790:	d0e6      	beq.n	8001760 <_printf_common+0xa4>
 8001792:	3601      	adds	r6, #1
 8001794:	e7d9      	b.n	800174a <_printf_common+0x8e>
	...

08001798 <_printf_i>:
 8001798:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800179c:	7e0f      	ldrb	r7, [r1, #24]
 800179e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80017a0:	2f78      	cmp	r7, #120	@ 0x78
 80017a2:	4691      	mov	r9, r2
 80017a4:	4680      	mov	r8, r0
 80017a6:	460c      	mov	r4, r1
 80017a8:	469a      	mov	sl, r3
 80017aa:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80017ae:	d807      	bhi.n	80017c0 <_printf_i+0x28>
 80017b0:	2f62      	cmp	r7, #98	@ 0x62
 80017b2:	d80a      	bhi.n	80017ca <_printf_i+0x32>
 80017b4:	2f00      	cmp	r7, #0
 80017b6:	f000 80d1 	beq.w	800195c <_printf_i+0x1c4>
 80017ba:	2f58      	cmp	r7, #88	@ 0x58
 80017bc:	f000 80b8 	beq.w	8001930 <_printf_i+0x198>
 80017c0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80017c4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80017c8:	e03a      	b.n	8001840 <_printf_i+0xa8>
 80017ca:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80017ce:	2b15      	cmp	r3, #21
 80017d0:	d8f6      	bhi.n	80017c0 <_printf_i+0x28>
 80017d2:	a101      	add	r1, pc, #4	@ (adr r1, 80017d8 <_printf_i+0x40>)
 80017d4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80017d8:	08001831 	.word	0x08001831
 80017dc:	08001845 	.word	0x08001845
 80017e0:	080017c1 	.word	0x080017c1
 80017e4:	080017c1 	.word	0x080017c1
 80017e8:	080017c1 	.word	0x080017c1
 80017ec:	080017c1 	.word	0x080017c1
 80017f0:	08001845 	.word	0x08001845
 80017f4:	080017c1 	.word	0x080017c1
 80017f8:	080017c1 	.word	0x080017c1
 80017fc:	080017c1 	.word	0x080017c1
 8001800:	080017c1 	.word	0x080017c1
 8001804:	08001943 	.word	0x08001943
 8001808:	0800186f 	.word	0x0800186f
 800180c:	080018fd 	.word	0x080018fd
 8001810:	080017c1 	.word	0x080017c1
 8001814:	080017c1 	.word	0x080017c1
 8001818:	08001965 	.word	0x08001965
 800181c:	080017c1 	.word	0x080017c1
 8001820:	0800186f 	.word	0x0800186f
 8001824:	080017c1 	.word	0x080017c1
 8001828:	080017c1 	.word	0x080017c1
 800182c:	08001905 	.word	0x08001905
 8001830:	6833      	ldr	r3, [r6, #0]
 8001832:	1d1a      	adds	r2, r3, #4
 8001834:	681b      	ldr	r3, [r3, #0]
 8001836:	6032      	str	r2, [r6, #0]
 8001838:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800183c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8001840:	2301      	movs	r3, #1
 8001842:	e09c      	b.n	800197e <_printf_i+0x1e6>
 8001844:	6833      	ldr	r3, [r6, #0]
 8001846:	6820      	ldr	r0, [r4, #0]
 8001848:	1d19      	adds	r1, r3, #4
 800184a:	6031      	str	r1, [r6, #0]
 800184c:	0606      	lsls	r6, r0, #24
 800184e:	d501      	bpl.n	8001854 <_printf_i+0xbc>
 8001850:	681d      	ldr	r5, [r3, #0]
 8001852:	e003      	b.n	800185c <_printf_i+0xc4>
 8001854:	0645      	lsls	r5, r0, #25
 8001856:	d5fb      	bpl.n	8001850 <_printf_i+0xb8>
 8001858:	f9b3 5000 	ldrsh.w	r5, [r3]
 800185c:	2d00      	cmp	r5, #0
 800185e:	da03      	bge.n	8001868 <_printf_i+0xd0>
 8001860:	232d      	movs	r3, #45	@ 0x2d
 8001862:	426d      	negs	r5, r5
 8001864:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001868:	4858      	ldr	r0, [pc, #352]	@ (80019cc <_printf_i+0x234>)
 800186a:	230a      	movs	r3, #10
 800186c:	e011      	b.n	8001892 <_printf_i+0xfa>
 800186e:	6821      	ldr	r1, [r4, #0]
 8001870:	6833      	ldr	r3, [r6, #0]
 8001872:	0608      	lsls	r0, r1, #24
 8001874:	f853 5b04 	ldr.w	r5, [r3], #4
 8001878:	d402      	bmi.n	8001880 <_printf_i+0xe8>
 800187a:	0649      	lsls	r1, r1, #25
 800187c:	bf48      	it	mi
 800187e:	b2ad      	uxthmi	r5, r5
 8001880:	2f6f      	cmp	r7, #111	@ 0x6f
 8001882:	4852      	ldr	r0, [pc, #328]	@ (80019cc <_printf_i+0x234>)
 8001884:	6033      	str	r3, [r6, #0]
 8001886:	bf14      	ite	ne
 8001888:	230a      	movne	r3, #10
 800188a:	2308      	moveq	r3, #8
 800188c:	2100      	movs	r1, #0
 800188e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8001892:	6866      	ldr	r6, [r4, #4]
 8001894:	60a6      	str	r6, [r4, #8]
 8001896:	2e00      	cmp	r6, #0
 8001898:	db05      	blt.n	80018a6 <_printf_i+0x10e>
 800189a:	6821      	ldr	r1, [r4, #0]
 800189c:	432e      	orrs	r6, r5
 800189e:	f021 0104 	bic.w	r1, r1, #4
 80018a2:	6021      	str	r1, [r4, #0]
 80018a4:	d04b      	beq.n	800193e <_printf_i+0x1a6>
 80018a6:	4616      	mov	r6, r2
 80018a8:	fbb5 f1f3 	udiv	r1, r5, r3
 80018ac:	fb03 5711 	mls	r7, r3, r1, r5
 80018b0:	5dc7      	ldrb	r7, [r0, r7]
 80018b2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80018b6:	462f      	mov	r7, r5
 80018b8:	42bb      	cmp	r3, r7
 80018ba:	460d      	mov	r5, r1
 80018bc:	d9f4      	bls.n	80018a8 <_printf_i+0x110>
 80018be:	2b08      	cmp	r3, #8
 80018c0:	d10b      	bne.n	80018da <_printf_i+0x142>
 80018c2:	6823      	ldr	r3, [r4, #0]
 80018c4:	07df      	lsls	r7, r3, #31
 80018c6:	d508      	bpl.n	80018da <_printf_i+0x142>
 80018c8:	6923      	ldr	r3, [r4, #16]
 80018ca:	6861      	ldr	r1, [r4, #4]
 80018cc:	4299      	cmp	r1, r3
 80018ce:	bfde      	ittt	le
 80018d0:	2330      	movle	r3, #48	@ 0x30
 80018d2:	f806 3c01 	strble.w	r3, [r6, #-1]
 80018d6:	f106 36ff 	addle.w	r6, r6, #4294967295
 80018da:	1b92      	subs	r2, r2, r6
 80018dc:	6122      	str	r2, [r4, #16]
 80018de:	f8cd a000 	str.w	sl, [sp]
 80018e2:	464b      	mov	r3, r9
 80018e4:	aa03      	add	r2, sp, #12
 80018e6:	4621      	mov	r1, r4
 80018e8:	4640      	mov	r0, r8
 80018ea:	f7ff fee7 	bl	80016bc <_printf_common>
 80018ee:	3001      	adds	r0, #1
 80018f0:	d14a      	bne.n	8001988 <_printf_i+0x1f0>
 80018f2:	f04f 30ff 	mov.w	r0, #4294967295
 80018f6:	b004      	add	sp, #16
 80018f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80018fc:	6823      	ldr	r3, [r4, #0]
 80018fe:	f043 0320 	orr.w	r3, r3, #32
 8001902:	6023      	str	r3, [r4, #0]
 8001904:	4832      	ldr	r0, [pc, #200]	@ (80019d0 <_printf_i+0x238>)
 8001906:	2778      	movs	r7, #120	@ 0x78
 8001908:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800190c:	6823      	ldr	r3, [r4, #0]
 800190e:	6831      	ldr	r1, [r6, #0]
 8001910:	061f      	lsls	r7, r3, #24
 8001912:	f851 5b04 	ldr.w	r5, [r1], #4
 8001916:	d402      	bmi.n	800191e <_printf_i+0x186>
 8001918:	065f      	lsls	r7, r3, #25
 800191a:	bf48      	it	mi
 800191c:	b2ad      	uxthmi	r5, r5
 800191e:	6031      	str	r1, [r6, #0]
 8001920:	07d9      	lsls	r1, r3, #31
 8001922:	bf44      	itt	mi
 8001924:	f043 0320 	orrmi.w	r3, r3, #32
 8001928:	6023      	strmi	r3, [r4, #0]
 800192a:	b11d      	cbz	r5, 8001934 <_printf_i+0x19c>
 800192c:	2310      	movs	r3, #16
 800192e:	e7ad      	b.n	800188c <_printf_i+0xf4>
 8001930:	4826      	ldr	r0, [pc, #152]	@ (80019cc <_printf_i+0x234>)
 8001932:	e7e9      	b.n	8001908 <_printf_i+0x170>
 8001934:	6823      	ldr	r3, [r4, #0]
 8001936:	f023 0320 	bic.w	r3, r3, #32
 800193a:	6023      	str	r3, [r4, #0]
 800193c:	e7f6      	b.n	800192c <_printf_i+0x194>
 800193e:	4616      	mov	r6, r2
 8001940:	e7bd      	b.n	80018be <_printf_i+0x126>
 8001942:	6833      	ldr	r3, [r6, #0]
 8001944:	6825      	ldr	r5, [r4, #0]
 8001946:	6961      	ldr	r1, [r4, #20]
 8001948:	1d18      	adds	r0, r3, #4
 800194a:	6030      	str	r0, [r6, #0]
 800194c:	062e      	lsls	r6, r5, #24
 800194e:	681b      	ldr	r3, [r3, #0]
 8001950:	d501      	bpl.n	8001956 <_printf_i+0x1be>
 8001952:	6019      	str	r1, [r3, #0]
 8001954:	e002      	b.n	800195c <_printf_i+0x1c4>
 8001956:	0668      	lsls	r0, r5, #25
 8001958:	d5fb      	bpl.n	8001952 <_printf_i+0x1ba>
 800195a:	8019      	strh	r1, [r3, #0]
 800195c:	2300      	movs	r3, #0
 800195e:	6123      	str	r3, [r4, #16]
 8001960:	4616      	mov	r6, r2
 8001962:	e7bc      	b.n	80018de <_printf_i+0x146>
 8001964:	6833      	ldr	r3, [r6, #0]
 8001966:	1d1a      	adds	r2, r3, #4
 8001968:	6032      	str	r2, [r6, #0]
 800196a:	681e      	ldr	r6, [r3, #0]
 800196c:	6862      	ldr	r2, [r4, #4]
 800196e:	2100      	movs	r1, #0
 8001970:	4630      	mov	r0, r6
 8001972:	f7fe fc4d 	bl	8000210 <memchr>
 8001976:	b108      	cbz	r0, 800197c <_printf_i+0x1e4>
 8001978:	1b80      	subs	r0, r0, r6
 800197a:	6060      	str	r0, [r4, #4]
 800197c:	6863      	ldr	r3, [r4, #4]
 800197e:	6123      	str	r3, [r4, #16]
 8001980:	2300      	movs	r3, #0
 8001982:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001986:	e7aa      	b.n	80018de <_printf_i+0x146>
 8001988:	6923      	ldr	r3, [r4, #16]
 800198a:	4632      	mov	r2, r6
 800198c:	4649      	mov	r1, r9
 800198e:	4640      	mov	r0, r8
 8001990:	47d0      	blx	sl
 8001992:	3001      	adds	r0, #1
 8001994:	d0ad      	beq.n	80018f2 <_printf_i+0x15a>
 8001996:	6823      	ldr	r3, [r4, #0]
 8001998:	079b      	lsls	r3, r3, #30
 800199a:	d413      	bmi.n	80019c4 <_printf_i+0x22c>
 800199c:	68e0      	ldr	r0, [r4, #12]
 800199e:	9b03      	ldr	r3, [sp, #12]
 80019a0:	4298      	cmp	r0, r3
 80019a2:	bfb8      	it	lt
 80019a4:	4618      	movlt	r0, r3
 80019a6:	e7a6      	b.n	80018f6 <_printf_i+0x15e>
 80019a8:	2301      	movs	r3, #1
 80019aa:	4632      	mov	r2, r6
 80019ac:	4649      	mov	r1, r9
 80019ae:	4640      	mov	r0, r8
 80019b0:	47d0      	blx	sl
 80019b2:	3001      	adds	r0, #1
 80019b4:	d09d      	beq.n	80018f2 <_printf_i+0x15a>
 80019b6:	3501      	adds	r5, #1
 80019b8:	68e3      	ldr	r3, [r4, #12]
 80019ba:	9903      	ldr	r1, [sp, #12]
 80019bc:	1a5b      	subs	r3, r3, r1
 80019be:	42ab      	cmp	r3, r5
 80019c0:	dcf2      	bgt.n	80019a8 <_printf_i+0x210>
 80019c2:	e7eb      	b.n	800199c <_printf_i+0x204>
 80019c4:	2500      	movs	r5, #0
 80019c6:	f104 0619 	add.w	r6, r4, #25
 80019ca:	e7f5      	b.n	80019b8 <_printf_i+0x220>
 80019cc:	08001dbd 	.word	0x08001dbd
 80019d0:	08001dce 	.word	0x08001dce

080019d4 <__sflush_r>:
 80019d4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80019d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80019dc:	0716      	lsls	r6, r2, #28
 80019de:	4605      	mov	r5, r0
 80019e0:	460c      	mov	r4, r1
 80019e2:	d454      	bmi.n	8001a8e <__sflush_r+0xba>
 80019e4:	684b      	ldr	r3, [r1, #4]
 80019e6:	2b00      	cmp	r3, #0
 80019e8:	dc02      	bgt.n	80019f0 <__sflush_r+0x1c>
 80019ea:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80019ec:	2b00      	cmp	r3, #0
 80019ee:	dd48      	ble.n	8001a82 <__sflush_r+0xae>
 80019f0:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80019f2:	2e00      	cmp	r6, #0
 80019f4:	d045      	beq.n	8001a82 <__sflush_r+0xae>
 80019f6:	2300      	movs	r3, #0
 80019f8:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80019fc:	682f      	ldr	r7, [r5, #0]
 80019fe:	6a21      	ldr	r1, [r4, #32]
 8001a00:	602b      	str	r3, [r5, #0]
 8001a02:	d030      	beq.n	8001a66 <__sflush_r+0x92>
 8001a04:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001a06:	89a3      	ldrh	r3, [r4, #12]
 8001a08:	0759      	lsls	r1, r3, #29
 8001a0a:	d505      	bpl.n	8001a18 <__sflush_r+0x44>
 8001a0c:	6863      	ldr	r3, [r4, #4]
 8001a0e:	1ad2      	subs	r2, r2, r3
 8001a10:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001a12:	b10b      	cbz	r3, 8001a18 <__sflush_r+0x44>
 8001a14:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001a16:	1ad2      	subs	r2, r2, r3
 8001a18:	2300      	movs	r3, #0
 8001a1a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001a1c:	6a21      	ldr	r1, [r4, #32]
 8001a1e:	4628      	mov	r0, r5
 8001a20:	47b0      	blx	r6
 8001a22:	1c43      	adds	r3, r0, #1
 8001a24:	89a3      	ldrh	r3, [r4, #12]
 8001a26:	d106      	bne.n	8001a36 <__sflush_r+0x62>
 8001a28:	6829      	ldr	r1, [r5, #0]
 8001a2a:	291d      	cmp	r1, #29
 8001a2c:	d82b      	bhi.n	8001a86 <__sflush_r+0xb2>
 8001a2e:	4a2a      	ldr	r2, [pc, #168]	@ (8001ad8 <__sflush_r+0x104>)
 8001a30:	40ca      	lsrs	r2, r1
 8001a32:	07d6      	lsls	r6, r2, #31
 8001a34:	d527      	bpl.n	8001a86 <__sflush_r+0xb2>
 8001a36:	2200      	movs	r2, #0
 8001a38:	6062      	str	r2, [r4, #4]
 8001a3a:	04d9      	lsls	r1, r3, #19
 8001a3c:	6922      	ldr	r2, [r4, #16]
 8001a3e:	6022      	str	r2, [r4, #0]
 8001a40:	d504      	bpl.n	8001a4c <__sflush_r+0x78>
 8001a42:	1c42      	adds	r2, r0, #1
 8001a44:	d101      	bne.n	8001a4a <__sflush_r+0x76>
 8001a46:	682b      	ldr	r3, [r5, #0]
 8001a48:	b903      	cbnz	r3, 8001a4c <__sflush_r+0x78>
 8001a4a:	6560      	str	r0, [r4, #84]	@ 0x54
 8001a4c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001a4e:	602f      	str	r7, [r5, #0]
 8001a50:	b1b9      	cbz	r1, 8001a82 <__sflush_r+0xae>
 8001a52:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001a56:	4299      	cmp	r1, r3
 8001a58:	d002      	beq.n	8001a60 <__sflush_r+0x8c>
 8001a5a:	4628      	mov	r0, r5
 8001a5c:	f7ff fbf4 	bl	8001248 <_free_r>
 8001a60:	2300      	movs	r3, #0
 8001a62:	6363      	str	r3, [r4, #52]	@ 0x34
 8001a64:	e00d      	b.n	8001a82 <__sflush_r+0xae>
 8001a66:	2301      	movs	r3, #1
 8001a68:	4628      	mov	r0, r5
 8001a6a:	47b0      	blx	r6
 8001a6c:	4602      	mov	r2, r0
 8001a6e:	1c50      	adds	r0, r2, #1
 8001a70:	d1c9      	bne.n	8001a06 <__sflush_r+0x32>
 8001a72:	682b      	ldr	r3, [r5, #0]
 8001a74:	2b00      	cmp	r3, #0
 8001a76:	d0c6      	beq.n	8001a06 <__sflush_r+0x32>
 8001a78:	2b1d      	cmp	r3, #29
 8001a7a:	d001      	beq.n	8001a80 <__sflush_r+0xac>
 8001a7c:	2b16      	cmp	r3, #22
 8001a7e:	d11e      	bne.n	8001abe <__sflush_r+0xea>
 8001a80:	602f      	str	r7, [r5, #0]
 8001a82:	2000      	movs	r0, #0
 8001a84:	e022      	b.n	8001acc <__sflush_r+0xf8>
 8001a86:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001a8a:	b21b      	sxth	r3, r3
 8001a8c:	e01b      	b.n	8001ac6 <__sflush_r+0xf2>
 8001a8e:	690f      	ldr	r7, [r1, #16]
 8001a90:	2f00      	cmp	r7, #0
 8001a92:	d0f6      	beq.n	8001a82 <__sflush_r+0xae>
 8001a94:	0793      	lsls	r3, r2, #30
 8001a96:	680e      	ldr	r6, [r1, #0]
 8001a98:	bf08      	it	eq
 8001a9a:	694b      	ldreq	r3, [r1, #20]
 8001a9c:	600f      	str	r7, [r1, #0]
 8001a9e:	bf18      	it	ne
 8001aa0:	2300      	movne	r3, #0
 8001aa2:	eba6 0807 	sub.w	r8, r6, r7
 8001aa6:	608b      	str	r3, [r1, #8]
 8001aa8:	f1b8 0f00 	cmp.w	r8, #0
 8001aac:	dde9      	ble.n	8001a82 <__sflush_r+0xae>
 8001aae:	6a21      	ldr	r1, [r4, #32]
 8001ab0:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8001ab2:	4643      	mov	r3, r8
 8001ab4:	463a      	mov	r2, r7
 8001ab6:	4628      	mov	r0, r5
 8001ab8:	47b0      	blx	r6
 8001aba:	2800      	cmp	r0, #0
 8001abc:	dc08      	bgt.n	8001ad0 <__sflush_r+0xfc>
 8001abe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001ac2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001ac6:	81a3      	strh	r3, [r4, #12]
 8001ac8:	f04f 30ff 	mov.w	r0, #4294967295
 8001acc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001ad0:	4407      	add	r7, r0
 8001ad2:	eba8 0800 	sub.w	r8, r8, r0
 8001ad6:	e7e7      	b.n	8001aa8 <__sflush_r+0xd4>
 8001ad8:	20400001 	.word	0x20400001

08001adc <_fflush_r>:
 8001adc:	b538      	push	{r3, r4, r5, lr}
 8001ade:	690b      	ldr	r3, [r1, #16]
 8001ae0:	4605      	mov	r5, r0
 8001ae2:	460c      	mov	r4, r1
 8001ae4:	b913      	cbnz	r3, 8001aec <_fflush_r+0x10>
 8001ae6:	2500      	movs	r5, #0
 8001ae8:	4628      	mov	r0, r5
 8001aea:	bd38      	pop	{r3, r4, r5, pc}
 8001aec:	b118      	cbz	r0, 8001af6 <_fflush_r+0x1a>
 8001aee:	6a03      	ldr	r3, [r0, #32]
 8001af0:	b90b      	cbnz	r3, 8001af6 <_fflush_r+0x1a>
 8001af2:	f7ff faa1 	bl	8001038 <__sinit>
 8001af6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001afa:	2b00      	cmp	r3, #0
 8001afc:	d0f3      	beq.n	8001ae6 <_fflush_r+0xa>
 8001afe:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001b00:	07d0      	lsls	r0, r2, #31
 8001b02:	d404      	bmi.n	8001b0e <_fflush_r+0x32>
 8001b04:	0599      	lsls	r1, r3, #22
 8001b06:	d402      	bmi.n	8001b0e <_fflush_r+0x32>
 8001b08:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001b0a:	f7ff fb9a 	bl	8001242 <__retarget_lock_acquire_recursive>
 8001b0e:	4628      	mov	r0, r5
 8001b10:	4621      	mov	r1, r4
 8001b12:	f7ff ff5f 	bl	80019d4 <__sflush_r>
 8001b16:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001b18:	07da      	lsls	r2, r3, #31
 8001b1a:	4605      	mov	r5, r0
 8001b1c:	d4e4      	bmi.n	8001ae8 <_fflush_r+0xc>
 8001b1e:	89a3      	ldrh	r3, [r4, #12]
 8001b20:	059b      	lsls	r3, r3, #22
 8001b22:	d4e1      	bmi.n	8001ae8 <_fflush_r+0xc>
 8001b24:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001b26:	f7ff fb8d 	bl	8001244 <__retarget_lock_release_recursive>
 8001b2a:	e7dd      	b.n	8001ae8 <_fflush_r+0xc>

08001b2c <__swbuf_r>:
 8001b2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001b2e:	460e      	mov	r6, r1
 8001b30:	4614      	mov	r4, r2
 8001b32:	4605      	mov	r5, r0
 8001b34:	b118      	cbz	r0, 8001b3e <__swbuf_r+0x12>
 8001b36:	6a03      	ldr	r3, [r0, #32]
 8001b38:	b90b      	cbnz	r3, 8001b3e <__swbuf_r+0x12>
 8001b3a:	f7ff fa7d 	bl	8001038 <__sinit>
 8001b3e:	69a3      	ldr	r3, [r4, #24]
 8001b40:	60a3      	str	r3, [r4, #8]
 8001b42:	89a3      	ldrh	r3, [r4, #12]
 8001b44:	071a      	lsls	r2, r3, #28
 8001b46:	d501      	bpl.n	8001b4c <__swbuf_r+0x20>
 8001b48:	6923      	ldr	r3, [r4, #16]
 8001b4a:	b943      	cbnz	r3, 8001b5e <__swbuf_r+0x32>
 8001b4c:	4621      	mov	r1, r4
 8001b4e:	4628      	mov	r0, r5
 8001b50:	f000 f82a 	bl	8001ba8 <__swsetup_r>
 8001b54:	b118      	cbz	r0, 8001b5e <__swbuf_r+0x32>
 8001b56:	f04f 37ff 	mov.w	r7, #4294967295
 8001b5a:	4638      	mov	r0, r7
 8001b5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001b5e:	6823      	ldr	r3, [r4, #0]
 8001b60:	6922      	ldr	r2, [r4, #16]
 8001b62:	1a98      	subs	r0, r3, r2
 8001b64:	6963      	ldr	r3, [r4, #20]
 8001b66:	b2f6      	uxtb	r6, r6
 8001b68:	4283      	cmp	r3, r0
 8001b6a:	4637      	mov	r7, r6
 8001b6c:	dc05      	bgt.n	8001b7a <__swbuf_r+0x4e>
 8001b6e:	4621      	mov	r1, r4
 8001b70:	4628      	mov	r0, r5
 8001b72:	f7ff ffb3 	bl	8001adc <_fflush_r>
 8001b76:	2800      	cmp	r0, #0
 8001b78:	d1ed      	bne.n	8001b56 <__swbuf_r+0x2a>
 8001b7a:	68a3      	ldr	r3, [r4, #8]
 8001b7c:	3b01      	subs	r3, #1
 8001b7e:	60a3      	str	r3, [r4, #8]
 8001b80:	6823      	ldr	r3, [r4, #0]
 8001b82:	1c5a      	adds	r2, r3, #1
 8001b84:	6022      	str	r2, [r4, #0]
 8001b86:	701e      	strb	r6, [r3, #0]
 8001b88:	6962      	ldr	r2, [r4, #20]
 8001b8a:	1c43      	adds	r3, r0, #1
 8001b8c:	429a      	cmp	r2, r3
 8001b8e:	d004      	beq.n	8001b9a <__swbuf_r+0x6e>
 8001b90:	89a3      	ldrh	r3, [r4, #12]
 8001b92:	07db      	lsls	r3, r3, #31
 8001b94:	d5e1      	bpl.n	8001b5a <__swbuf_r+0x2e>
 8001b96:	2e0a      	cmp	r6, #10
 8001b98:	d1df      	bne.n	8001b5a <__swbuf_r+0x2e>
 8001b9a:	4621      	mov	r1, r4
 8001b9c:	4628      	mov	r0, r5
 8001b9e:	f7ff ff9d 	bl	8001adc <_fflush_r>
 8001ba2:	2800      	cmp	r0, #0
 8001ba4:	d0d9      	beq.n	8001b5a <__swbuf_r+0x2e>
 8001ba6:	e7d6      	b.n	8001b56 <__swbuf_r+0x2a>

08001ba8 <__swsetup_r>:
 8001ba8:	b538      	push	{r3, r4, r5, lr}
 8001baa:	4b29      	ldr	r3, [pc, #164]	@ (8001c50 <__swsetup_r+0xa8>)
 8001bac:	4605      	mov	r5, r0
 8001bae:	6818      	ldr	r0, [r3, #0]
 8001bb0:	460c      	mov	r4, r1
 8001bb2:	b118      	cbz	r0, 8001bbc <__swsetup_r+0x14>
 8001bb4:	6a03      	ldr	r3, [r0, #32]
 8001bb6:	b90b      	cbnz	r3, 8001bbc <__swsetup_r+0x14>
 8001bb8:	f7ff fa3e 	bl	8001038 <__sinit>
 8001bbc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001bc0:	0719      	lsls	r1, r3, #28
 8001bc2:	d422      	bmi.n	8001c0a <__swsetup_r+0x62>
 8001bc4:	06da      	lsls	r2, r3, #27
 8001bc6:	d407      	bmi.n	8001bd8 <__swsetup_r+0x30>
 8001bc8:	2209      	movs	r2, #9
 8001bca:	602a      	str	r2, [r5, #0]
 8001bcc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001bd0:	81a3      	strh	r3, [r4, #12]
 8001bd2:	f04f 30ff 	mov.w	r0, #4294967295
 8001bd6:	e033      	b.n	8001c40 <__swsetup_r+0x98>
 8001bd8:	0758      	lsls	r0, r3, #29
 8001bda:	d512      	bpl.n	8001c02 <__swsetup_r+0x5a>
 8001bdc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001bde:	b141      	cbz	r1, 8001bf2 <__swsetup_r+0x4a>
 8001be0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001be4:	4299      	cmp	r1, r3
 8001be6:	d002      	beq.n	8001bee <__swsetup_r+0x46>
 8001be8:	4628      	mov	r0, r5
 8001bea:	f7ff fb2d 	bl	8001248 <_free_r>
 8001bee:	2300      	movs	r3, #0
 8001bf0:	6363      	str	r3, [r4, #52]	@ 0x34
 8001bf2:	89a3      	ldrh	r3, [r4, #12]
 8001bf4:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8001bf8:	81a3      	strh	r3, [r4, #12]
 8001bfa:	2300      	movs	r3, #0
 8001bfc:	6063      	str	r3, [r4, #4]
 8001bfe:	6923      	ldr	r3, [r4, #16]
 8001c00:	6023      	str	r3, [r4, #0]
 8001c02:	89a3      	ldrh	r3, [r4, #12]
 8001c04:	f043 0308 	orr.w	r3, r3, #8
 8001c08:	81a3      	strh	r3, [r4, #12]
 8001c0a:	6923      	ldr	r3, [r4, #16]
 8001c0c:	b94b      	cbnz	r3, 8001c22 <__swsetup_r+0x7a>
 8001c0e:	89a3      	ldrh	r3, [r4, #12]
 8001c10:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8001c14:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8001c18:	d003      	beq.n	8001c22 <__swsetup_r+0x7a>
 8001c1a:	4621      	mov	r1, r4
 8001c1c:	4628      	mov	r0, r5
 8001c1e:	f000 f84f 	bl	8001cc0 <__smakebuf_r>
 8001c22:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001c26:	f013 0201 	ands.w	r2, r3, #1
 8001c2a:	d00a      	beq.n	8001c42 <__swsetup_r+0x9a>
 8001c2c:	2200      	movs	r2, #0
 8001c2e:	60a2      	str	r2, [r4, #8]
 8001c30:	6962      	ldr	r2, [r4, #20]
 8001c32:	4252      	negs	r2, r2
 8001c34:	61a2      	str	r2, [r4, #24]
 8001c36:	6922      	ldr	r2, [r4, #16]
 8001c38:	b942      	cbnz	r2, 8001c4c <__swsetup_r+0xa4>
 8001c3a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8001c3e:	d1c5      	bne.n	8001bcc <__swsetup_r+0x24>
 8001c40:	bd38      	pop	{r3, r4, r5, pc}
 8001c42:	0799      	lsls	r1, r3, #30
 8001c44:	bf58      	it	pl
 8001c46:	6962      	ldrpl	r2, [r4, #20]
 8001c48:	60a2      	str	r2, [r4, #8]
 8001c4a:	e7f4      	b.n	8001c36 <__swsetup_r+0x8e>
 8001c4c:	2000      	movs	r0, #0
 8001c4e:	e7f7      	b.n	8001c40 <__swsetup_r+0x98>
 8001c50:	2000000c 	.word	0x2000000c

08001c54 <_sbrk_r>:
 8001c54:	b538      	push	{r3, r4, r5, lr}
 8001c56:	4d06      	ldr	r5, [pc, #24]	@ (8001c70 <_sbrk_r+0x1c>)
 8001c58:	2300      	movs	r3, #0
 8001c5a:	4604      	mov	r4, r0
 8001c5c:	4608      	mov	r0, r1
 8001c5e:	602b      	str	r3, [r5, #0]
 8001c60:	f7ff f868 	bl	8000d34 <_sbrk>
 8001c64:	1c43      	adds	r3, r0, #1
 8001c66:	d102      	bne.n	8001c6e <_sbrk_r+0x1a>
 8001c68:	682b      	ldr	r3, [r5, #0]
 8001c6a:	b103      	cbz	r3, 8001c6e <_sbrk_r+0x1a>
 8001c6c:	6023      	str	r3, [r4, #0]
 8001c6e:	bd38      	pop	{r3, r4, r5, pc}
 8001c70:	200001c0 	.word	0x200001c0

08001c74 <__swhatbuf_r>:
 8001c74:	b570      	push	{r4, r5, r6, lr}
 8001c76:	460c      	mov	r4, r1
 8001c78:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001c7c:	2900      	cmp	r1, #0
 8001c7e:	b096      	sub	sp, #88	@ 0x58
 8001c80:	4615      	mov	r5, r2
 8001c82:	461e      	mov	r6, r3
 8001c84:	da0d      	bge.n	8001ca2 <__swhatbuf_r+0x2e>
 8001c86:	89a3      	ldrh	r3, [r4, #12]
 8001c88:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001c8c:	f04f 0100 	mov.w	r1, #0
 8001c90:	bf14      	ite	ne
 8001c92:	2340      	movne	r3, #64	@ 0x40
 8001c94:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001c98:	2000      	movs	r0, #0
 8001c9a:	6031      	str	r1, [r6, #0]
 8001c9c:	602b      	str	r3, [r5, #0]
 8001c9e:	b016      	add	sp, #88	@ 0x58
 8001ca0:	bd70      	pop	{r4, r5, r6, pc}
 8001ca2:	466a      	mov	r2, sp
 8001ca4:	f000 f848 	bl	8001d38 <_fstat_r>
 8001ca8:	2800      	cmp	r0, #0
 8001caa:	dbec      	blt.n	8001c86 <__swhatbuf_r+0x12>
 8001cac:	9901      	ldr	r1, [sp, #4]
 8001cae:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001cb2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001cb6:	4259      	negs	r1, r3
 8001cb8:	4159      	adcs	r1, r3
 8001cba:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001cbe:	e7eb      	b.n	8001c98 <__swhatbuf_r+0x24>

08001cc0 <__smakebuf_r>:
 8001cc0:	898b      	ldrh	r3, [r1, #12]
 8001cc2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001cc4:	079d      	lsls	r5, r3, #30
 8001cc6:	4606      	mov	r6, r0
 8001cc8:	460c      	mov	r4, r1
 8001cca:	d507      	bpl.n	8001cdc <__smakebuf_r+0x1c>
 8001ccc:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001cd0:	6023      	str	r3, [r4, #0]
 8001cd2:	6123      	str	r3, [r4, #16]
 8001cd4:	2301      	movs	r3, #1
 8001cd6:	6163      	str	r3, [r4, #20]
 8001cd8:	b003      	add	sp, #12
 8001cda:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001cdc:	ab01      	add	r3, sp, #4
 8001cde:	466a      	mov	r2, sp
 8001ce0:	f7ff ffc8 	bl	8001c74 <__swhatbuf_r>
 8001ce4:	9f00      	ldr	r7, [sp, #0]
 8001ce6:	4605      	mov	r5, r0
 8001ce8:	4639      	mov	r1, r7
 8001cea:	4630      	mov	r0, r6
 8001cec:	f7ff fb18 	bl	8001320 <_malloc_r>
 8001cf0:	b948      	cbnz	r0, 8001d06 <__smakebuf_r+0x46>
 8001cf2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001cf6:	059a      	lsls	r2, r3, #22
 8001cf8:	d4ee      	bmi.n	8001cd8 <__smakebuf_r+0x18>
 8001cfa:	f023 0303 	bic.w	r3, r3, #3
 8001cfe:	f043 0302 	orr.w	r3, r3, #2
 8001d02:	81a3      	strh	r3, [r4, #12]
 8001d04:	e7e2      	b.n	8001ccc <__smakebuf_r+0xc>
 8001d06:	89a3      	ldrh	r3, [r4, #12]
 8001d08:	6020      	str	r0, [r4, #0]
 8001d0a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001d0e:	81a3      	strh	r3, [r4, #12]
 8001d10:	9b01      	ldr	r3, [sp, #4]
 8001d12:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8001d16:	b15b      	cbz	r3, 8001d30 <__smakebuf_r+0x70>
 8001d18:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001d1c:	4630      	mov	r0, r6
 8001d1e:	f000 f81d 	bl	8001d5c <_isatty_r>
 8001d22:	b128      	cbz	r0, 8001d30 <__smakebuf_r+0x70>
 8001d24:	89a3      	ldrh	r3, [r4, #12]
 8001d26:	f023 0303 	bic.w	r3, r3, #3
 8001d2a:	f043 0301 	orr.w	r3, r3, #1
 8001d2e:	81a3      	strh	r3, [r4, #12]
 8001d30:	89a3      	ldrh	r3, [r4, #12]
 8001d32:	431d      	orrs	r5, r3
 8001d34:	81a5      	strh	r5, [r4, #12]
 8001d36:	e7cf      	b.n	8001cd8 <__smakebuf_r+0x18>

08001d38 <_fstat_r>:
 8001d38:	b538      	push	{r3, r4, r5, lr}
 8001d3a:	4d07      	ldr	r5, [pc, #28]	@ (8001d58 <_fstat_r+0x20>)
 8001d3c:	2300      	movs	r3, #0
 8001d3e:	4604      	mov	r4, r0
 8001d40:	4608      	mov	r0, r1
 8001d42:	4611      	mov	r1, r2
 8001d44:	602b      	str	r3, [r5, #0]
 8001d46:	f7fe ffcc 	bl	8000ce2 <_fstat>
 8001d4a:	1c43      	adds	r3, r0, #1
 8001d4c:	d102      	bne.n	8001d54 <_fstat_r+0x1c>
 8001d4e:	682b      	ldr	r3, [r5, #0]
 8001d50:	b103      	cbz	r3, 8001d54 <_fstat_r+0x1c>
 8001d52:	6023      	str	r3, [r4, #0]
 8001d54:	bd38      	pop	{r3, r4, r5, pc}
 8001d56:	bf00      	nop
 8001d58:	200001c0 	.word	0x200001c0

08001d5c <_isatty_r>:
 8001d5c:	b538      	push	{r3, r4, r5, lr}
 8001d5e:	4d06      	ldr	r5, [pc, #24]	@ (8001d78 <_isatty_r+0x1c>)
 8001d60:	2300      	movs	r3, #0
 8001d62:	4604      	mov	r4, r0
 8001d64:	4608      	mov	r0, r1
 8001d66:	602b      	str	r3, [r5, #0]
 8001d68:	f7fe ffcb 	bl	8000d02 <_isatty>
 8001d6c:	1c43      	adds	r3, r0, #1
 8001d6e:	d102      	bne.n	8001d76 <_isatty_r+0x1a>
 8001d70:	682b      	ldr	r3, [r5, #0]
 8001d72:	b103      	cbz	r3, 8001d76 <_isatty_r+0x1a>
 8001d74:	6023      	str	r3, [r4, #0]
 8001d76:	bd38      	pop	{r3, r4, r5, pc}
 8001d78:	200001c0 	.word	0x200001c0

08001d7c <_init>:
 8001d7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001d7e:	bf00      	nop
 8001d80:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001d82:	bc08      	pop	{r3}
 8001d84:	469e      	mov	lr, r3
 8001d86:	4770      	bx	lr

08001d88 <_fini>:
 8001d88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001d8a:	bf00      	nop
 8001d8c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001d8e:	bc08      	pop	{r3}
 8001d90:	469e      	mov	lr, r3
 8001d92:	4770      	bx	lr
